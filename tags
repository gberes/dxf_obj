!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AC1009	dxflib/dl_codes.h	/^        AC1009,         \/\/ R12$/;"	e	enum:DL_Codes::version
AC1009_MIN	dxflib/dl_codes.h	/^        AC1009_MIN,     \/\/ R12, minimalistic$/;"	e	enum:DL_Codes::version
AC1012	dxflib/dl_codes.h	/^        AC1012,$/;"	e	enum:DL_Codes::version
AC1014	dxflib/dl_codes.h	/^        AC1014,$/;"	e	enum:DL_Codes::version
AC1015	dxflib/dl_codes.h	/^        AC1015          \/\/ R2000$/;"	e	enum:DL_Codes::version
CC	makefile	/^CC=g++$/;"	m
CFLAGS	makefile	/^	CFLAGS=-c -std=c++14 -g # -O0 #-Wall # sadly we are having a lot of unused functions for tests so this is undesirable...$/;"	m
CFLAGS	makefile	/^	CFLAGS=-c -stdlib=libc++ -std=c++1y -O2$/;"	m
CFLAGS	makefile	/^	CFLAGS=-c -stdlib=libc++ -std=c++1y -g # -fsanitize=address -fno-omit-frame-pointer$/;"	m
DL_3dFaceData	dxflib/dl_entities.h	/^typedef DL_TraceData DL_3dFaceData;$/;"	t
DL_ANGLE_CODE	dxflib/dl_codes.h	453;"	d
DL_ATTFLAGS_CODE	dxflib/dl_codes.h	430;"	d
DL_ATTRIBUTES_H	dxflib/dl_attributes.h	26;"	d
DL_ATTS_FOLLOW_CODE	dxflib/dl_codes.h	491;"	d
DL_ATT_CONST_FLAG	dxflib/dl_codes.h	496;"	d
DL_ATT_FLAGS_CODE	dxflib/dl_codes.h	494;"	d
DL_ATT_INVIS_FLAG	dxflib/dl_codes.h	495;"	d
DL_ATT_PRESET_FLAG	dxflib/dl_codes.h	498;"	d
DL_ATT_TAG_CODE	dxflib/dl_codes.h	492;"	d
DL_ATT_VAL_CODE	dxflib/dl_codes.h	493;"	d
DL_ATT_VERIFY_FLAG	dxflib/dl_codes.h	497;"	d
DL_ArcAlignedTextData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_ArcAlignedTextData {$/;"	s
DL_ArcData	dxflib/dl_entities.h	/^    DL_ArcData(double acx, double acy, double acz,$/;"	f	struct:DL_ArcData
DL_ArcData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_ArcData {$/;"	s
DL_AttributeData	dxflib/dl_entities.h	/^    DL_AttributeData(const DL_TextData& tData, const std::string& tag)$/;"	f	struct:DL_AttributeData
DL_AttributeData	dxflib/dl_entities.h	/^    DL_AttributeData(double ipx, double ipy, double ipz,$/;"	f	struct:DL_AttributeData
DL_AttributeData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_AttributeData : public DL_TextData {$/;"	s
DL_Attributes	dxflib/dl_attributes.h	/^    DL_Attributes() :$/;"	f	class:DL_Attributes
DL_Attributes	dxflib/dl_attributes.h	/^    DL_Attributes(const std::string& layer,$/;"	f	class:DL_Attributes
DL_Attributes	dxflib/dl_attributes.h	/^class DXFLIB_EXPORT DL_Attributes {$/;"	c
DL_BLOCK	dxflib/dl_dxf.h	69;"	d
DL_BLOCK_BASE_CODE	dxflib/dl_codes.h	446;"	d
DL_BLOCK_EN_CODE	dxflib/dl_codes.h	518;"	d
DL_BLOCK_FLAGS_CODE	dxflib/dl_codes.h	445;"	d
DL_BLOCK_NAME_CODE	dxflib/dl_codes.h	470;"	d
DL_BULGE_CODE	dxflib/dl_codes.h	484;"	d
DL_BlockData	dxflib/dl_entities.h	/^    DL_BlockData(const std::string& bName,$/;"	f	struct:DL_BlockData
DL_BlockData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_BlockData {$/;"	s
DL_CENTER_CODE	dxflib/dl_codes.h	458;"	d
DL_CLOSED_PLINE	dxflib/dl_codes.h	503;"	d
DL_COLOUR_CODE	dxflib/dl_codes.h	486;"	d
DL_COMMENT_CODE	dxflib/dl_codes.h	438;"	d
DL_COND_OP_CODE	dxflib/dl_codes.h	461;"	d
DL_CRD2GRP_END	dxflib/dl_codes.h	405;"	d
DL_CRD2GRP_END	dxflib/dl_codes.h	424;"	d
DL_CRD2GRP_START	dxflib/dl_codes.h	404;"	d
DL_CRD2GRP_START	dxflib/dl_codes.h	423;"	d
DL_CRDGRP_END	dxflib/dl_codes.h	390;"	d
DL_CRDGRP_START	dxflib/dl_codes.h	389;"	d
DL_CREATIONADAPTER_H	dxflib/dl_creationadapter.h	26;"	d
DL_CREATIONINTERFACE_H	dxflib/dl_creationinterface.h	26;"	d
DL_CircleData	dxflib/dl_entities.h	/^    DL_CircleData(double acx, double acy, double acz,$/;"	f	struct:DL_CircleData
DL_CircleData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_CircleData {$/;"	s
DL_Codes	dxflib/dl_codes.h	/^class DXFLIB_EXPORT DL_Codes {$/;"	c
DL_ControlPointData	dxflib/dl_entities.h	/^    DL_ControlPointData(double px, double py, double pz, double weight) {$/;"	f	struct:DL_ControlPointData
DL_ControlPointData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_ControlPointData {$/;"	s
DL_CreationAdapter	dxflib/dl_creationadapter.h	/^    DL_CreationAdapter() {}$/;"	f	class:DL_CreationAdapter
DL_CreationAdapter	dxflib/dl_creationadapter.h	/^class DXFLIB_EXPORT DL_CreationAdapter : public DL_CreationInterface {$/;"	c
DL_CreationInterface	dxflib/dl_creationinterface.h	/^    DL_CreationInterface() {$/;"	f	class:DL_CreationInterface
DL_CreationInterface	dxflib/dl_creationinterface.h	/^class DXFLIB_EXPORT DL_CreationInterface {$/;"	c
DL_DCS_TRANS_CODE	dxflib/dl_codes.h	542;"	d
DL_DICTIONARY	dxflib/dl_dxf.h	102;"	d
DL_DXF_H	dxflib/dl_dxf.h	26;"	d
DL_DXF_MAXGROUPCODE	dxflib/dl_codes.h	59;"	d
DL_DXF_MAXLINE	dxflib/dl_codes.h	58;"	d
DL_DictionaryData	dxflib/dl_entities.h	/^    DL_DictionaryData(const std::string& handle) : handle(handle) {}$/;"	f	struct:DL_DictionaryData
DL_DictionaryData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DictionaryData {$/;"	s
DL_DictionaryEntryData	dxflib/dl_entities.h	/^    DL_DictionaryEntryData(const std::string& name, const std::string& handle) :$/;"	f	struct:DL_DictionaryEntryData
DL_DictionaryEntryData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DictionaryEntryData {$/;"	s
DL_DimAlignedData	dxflib/dl_entities.h	/^    DL_DimAlignedData(double depx1, double depy1, double depz1,$/;"	f	struct:DL_DimAlignedData
DL_DimAlignedData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimAlignedData {$/;"	s
DL_DimAngular3PData	dxflib/dl_entities.h	/^    DL_DimAngular3PData(double ddpx1, double ddpy1, double ddpz1,$/;"	f	struct:DL_DimAngular3PData
DL_DimAngular3PData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimAngular3PData {$/;"	s
DL_DimAngularData	dxflib/dl_entities.h	/^    DL_DimAngularData(double ddpx1, double ddpy1, double ddpz1,$/;"	f	struct:DL_DimAngularData
DL_DimAngularData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimAngularData {$/;"	s
DL_DimDiametricData	dxflib/dl_entities.h	/^    DL_DimDiametricData(double ddpx, double ddpy, double ddpz, double dleader) {$/;"	f	struct:DL_DimDiametricData
DL_DimDiametricData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimDiametricData {$/;"	s
DL_DimLinearData	dxflib/dl_entities.h	/^    DL_DimLinearData(double ddpx1, double ddpy1, double ddpz1,$/;"	f	struct:DL_DimLinearData
DL_DimLinearData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimLinearData {$/;"	s
DL_DimOrdinateData	dxflib/dl_entities.h	/^    DL_DimOrdinateData(double ddpx1, double ddpy1, double ddpz1,$/;"	f	struct:DL_DimOrdinateData
DL_DimOrdinateData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimOrdinateData {$/;"	s
DL_DimRadialData	dxflib/dl_entities.h	/^    DL_DimRadialData(double ddpx, double ddpy, double ddpz, double dleader) {$/;"	f	struct:DL_DimRadialData
DL_DimRadialData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimRadialData {$/;"	s
DL_DimensionData	dxflib/dl_entities.h	/^    DL_DimensionData(double dpx, double dpy, double dpz,$/;"	f	struct:DL_DimensionData
DL_DimensionData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_DimensionData {$/;"	s
DL_Dxf	dxflib/dl_dxf.cpp	/^DL_Dxf::DL_Dxf() {$/;"	f	class:DL_Dxf
DL_Dxf	dxflib/dl_dxf.h	/^class DXFLIB_EXPORT DL_Dxf {$/;"	c
DL_ENDBLK	dxflib/dl_dxf.h	70;"	d
DL_ENTITIES_H	dxflib/dl_entities.h	26;"	d
DL_ENTITY_3DFACE	dxflib/dl_dxf.h	96;"	d
DL_ENTITY_ARC	dxflib/dl_dxf.h	82;"	d
DL_ENTITY_ARCALIGNEDTEXT	dxflib/dl_dxf.h	99;"	d
DL_ENTITY_ATTRIB	dxflib/dl_dxf.h	91;"	d
DL_ENTITY_CIRCLE	dxflib/dl_dxf.h	83;"	d
DL_ENTITY_CONTROLPOINT	dxflib/dl_dxf.h	81;"	d
DL_ENTITY_DIMENSION	dxflib/dl_dxf.h	88;"	d
DL_ENTITY_ELLIPSE	dxflib/dl_dxf.h	84;"	d
DL_ENTITY_HATCH	dxflib/dl_dxf.h	90;"	d
DL_ENTITY_IMAGE	dxflib/dl_dxf.h	92;"	d
DL_ENTITY_IMAGEDEF	dxflib/dl_dxf.h	93;"	d
DL_ENTITY_INSERT	dxflib/dl_dxf.h	85;"	d
DL_ENTITY_KNOT	dxflib/dl_dxf.h	80;"	d
DL_ENTITY_LEADER	dxflib/dl_dxf.h	89;"	d
DL_ENTITY_LINE	dxflib/dl_dxf.h	75;"	d
DL_ENTITY_LWPOLYLINE	dxflib/dl_dxf.h	77;"	d
DL_ENTITY_MTEXT	dxflib/dl_dxf.h	87;"	d
DL_ENTITY_POINT	dxflib/dl_dxf.h	74;"	d
DL_ENTITY_POLYLINE	dxflib/dl_dxf.h	76;"	d
DL_ENTITY_RAY	dxflib/dl_dxf.h	98;"	d
DL_ENTITY_SEQEND	dxflib/dl_dxf.h	100;"	d
DL_ENTITY_SOLID	dxflib/dl_dxf.h	95;"	d
DL_ENTITY_SPLINE	dxflib/dl_dxf.h	79;"	d
DL_ENTITY_TEXT	dxflib/dl_dxf.h	86;"	d
DL_ENTITY_TRACE	dxflib/dl_dxf.h	94;"	d
DL_ENTITY_TYPE_CODE	dxflib/dl_codes.h	464;"	d
DL_ENTITY_VERTEX	dxflib/dl_dxf.h	78;"	d
DL_ENTITY_XLINE	dxflib/dl_dxf.h	97;"	d
DL_ENT_HAND_CODE	dxflib/dl_codes.h	472;"	d
DL_ERLGRP_END	dxflib/dl_codes.h	413;"	d
DL_ERLGRP_START	dxflib/dl_codes.h	412;"	d
DL_ESTRGRP_END	dxflib/dl_codes.h	409;"	d
DL_ESTRGRP_START	dxflib/dl_codes.h	408;"	d
DL_EXCEPTION_H	dxflib/dl_exception.h	27;"	d
DL_EXTD_APP_NAME	dxflib/dl_codes.h	524;"	d
DL_EXTD_CHUNK	dxflib/dl_codes.h	527;"	d
DL_EXTD_CTL_STR	dxflib/dl_codes.h	525;"	d
DL_EXTD_DIR	dxflib/dl_codes.h	532;"	d
DL_EXTD_DISP	dxflib/dl_codes.h	531;"	d
DL_EXTD_DIST	dxflib/dl_codes.h	534;"	d
DL_EXTD_FLOAT	dxflib/dl_codes.h	533;"	d
DL_EXTD_HANDLE	dxflib/dl_codes.h	528;"	d
DL_EXTD_INT16	dxflib/dl_codes.h	536;"	d
DL_EXTD_INT32	dxflib/dl_codes.h	537;"	d
DL_EXTD_LYR_STR	dxflib/dl_codes.h	526;"	d
DL_EXTD_POINT	dxflib/dl_codes.h	529;"	d
DL_EXTD_POS	dxflib/dl_codes.h	530;"	d
DL_EXTD_SCALE	dxflib/dl_codes.h	535;"	d
DL_EXTD_SENTINEL	dxflib/dl_codes.h	522;"	d
DL_EXTD_STR	dxflib/dl_codes.h	523;"	d
DL_EXTRUSION_H	dxflib/dl_extrusion.h	26;"	d
DL_E_NAME	dxflib/dl_codes.h	519;"	d
DL_EllipseData	dxflib/dl_entities.h	/^    DL_EllipseData(double cx, double cy, double cz,$/;"	f	struct:DL_EllipseData
DL_EllipseData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_EllipseData {$/;"	s
DL_Exception	dxflib/dl_exception.h	/^class DXFLIB_EXPORT DL_Exception {}$/;"	c
DL_Extrusion	dxflib/dl_extrusion.h	/^    DL_Extrusion() {$/;"	f	class:DL_Extrusion
DL_Extrusion	dxflib/dl_extrusion.h	/^    DL_Extrusion(double dx, double dy, double dz, double elevation) {$/;"	f	class:DL_Extrusion
DL_Extrusion	dxflib/dl_extrusion.h	/^class DXFLIB_EXPORT DL_Extrusion {$/;"	c
DL_FILE_SEP_CODE	dxflib/dl_codes.h	466;"	d
DL_FIRST_INT_CODE	dxflib/dl_codes.h	429;"	d
DL_FIRST_REAL_CODE	dxflib/dl_codes.h	427;"	d
DL_FIRST_XCOORD_CODE	dxflib/dl_codes.h	475;"	d
DL_FIRST_YCOORD_CODE	dxflib/dl_codes.h	476;"	d
DL_FIRST_ZCOORD_CODE	dxflib/dl_codes.h	477;"	d
DL_FLD_LEN_CODE	dxflib/dl_codes.h	433;"	d
DL_FROZEN	dxflib/dl_codes.h	513;"	d
DL_FROZEN_BY_DEF	dxflib/dl_codes.h	514;"	d
DL_FitPointData	dxflib/dl_entities.h	/^    DL_FitPointData(double x, double y, double z) : x(x), y(y), z(z) {}$/;"	f	struct:DL_FitPointData
DL_FitPointData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_FitPointData {$/;"	s
DL_GroupCodeExc	dxflib/dl_exception.h	/^    DL_GroupCodeExc(int gc=0) : groupCode(gc) {}$/;"	f	class:DL_GroupCodeExc
DL_GroupCodeExc	dxflib/dl_exception.h	/^class DXFLIB_EXPORT DL_GroupCodeExc : public DL_Exception {$/;"	c
DL_HatchData	dxflib/dl_entities.h	/^    DL_HatchData() {}$/;"	f	struct:DL_HatchData
DL_HatchData	dxflib/dl_entities.h	/^    DL_HatchData(int numLoops,$/;"	f	struct:DL_HatchData
DL_HatchData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_HatchData {$/;"	s
DL_HatchEdgeData	dxflib/dl_entities.h	/^    DL_HatchEdgeData() : defined(false), x1(0.0), y1(0.0), x2(0.0), y2(0.0) {$/;"	f	struct:DL_HatchEdgeData
DL_HatchEdgeData	dxflib/dl_entities.h	/^    DL_HatchEdgeData(double cx, double cy,$/;"	f	struct:DL_HatchEdgeData
DL_HatchEdgeData	dxflib/dl_entities.h	/^    DL_HatchEdgeData(double x1, double y1,$/;"	f	struct:DL_HatchEdgeData
DL_HatchEdgeData	dxflib/dl_entities.h	/^    DL_HatchEdgeData(unsigned int degree,$/;"	f	struct:DL_HatchEdgeData
DL_HatchEdgeData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_HatchEdgeData {$/;"	s
DL_HatchLoopData	dxflib/dl_entities.h	/^    DL_HatchLoopData() {}$/;"	f	struct:DL_HatchLoopData
DL_HatchLoopData	dxflib/dl_entities.h	/^    DL_HatchLoopData(int hNumEdges) {$/;"	f	struct:DL_HatchLoopData
DL_HatchLoopData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_HatchLoopData {$/;"	s
DL_INSERT_COORD_CODE	dxflib/dl_codes.h	421;"	d
DL_INS_POINT_CODE	dxflib/dl_codes.h	454;"	d
DL_ImageData	dxflib/dl_entities.h	/^    DL_ImageData(const std::string& iref,$/;"	f	struct:DL_ImageData
DL_ImageData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_ImageData {$/;"	s
DL_ImageDefData	dxflib/dl_entities.h	/^    DL_ImageDefData(const std::string& iref,$/;"	f	struct:DL_ImageDefData
DL_ImageDefData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_ImageDefData {$/;"	s
DL_InsertData	dxflib/dl_entities.h	/^    DL_InsertData(const std::string& name,$/;"	f	struct:DL_InsertData
DL_InsertData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_InsertData {$/;"	s
DL_KnotData	dxflib/dl_entities.h	/^    DL_KnotData() {}$/;"	f	struct:DL_KnotData
DL_KnotData	dxflib/dl_entities.h	/^    DL_KnotData(double pk) {$/;"	f	struct:DL_KnotData
DL_KnotData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_KnotData {$/;"	s
DL_LAST_INT_CODE	dxflib/dl_codes.h	434;"	d
DL_LAST_REAL_CODE	dxflib/dl_codes.h	428;"	d
DL_LAYER	dxflib/dl_dxf.h	68;"	d
DL_LAYER_FLAGS_CODE	dxflib/dl_codes.h	432;"	d
DL_LAYER_NAME_CODE	dxflib/dl_codes.h	474;"	d
DL_LINETYPE	dxflib/dl_dxf.h	71;"	d
DL_LINE_END_CODE	dxflib/dl_codes.h	442;"	d
DL_LINE_START_CODE	dxflib/dl_codes.h	441;"	d
DL_LOCKED	dxflib/dl_codes.h	515;"	d
DL_LTYPE_CODE	dxflib/dl_codes.h	487;"	d
DL_L_END_CODE	dxflib/dl_codes.h	479;"	d
DL_L_START_CODE	dxflib/dl_codes.h	478;"	d
DL_LayerData	dxflib/dl_entities.h	/^    DL_LayerData(const std::string& name,$/;"	f	struct:DL_LayerData
DL_LayerData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_LayerData {$/;"	s
DL_LeaderData	dxflib/dl_entities.h	/^    DL_LeaderData(int lArrowHeadFlag,$/;"	f	struct:DL_LeaderData
DL_LeaderData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_LeaderData {$/;"	s
DL_LeaderVertexData	dxflib/dl_entities.h	/^    DL_LeaderVertexData(double px=0.0, double py=0.0, double pz=0.0) {$/;"	f	struct:DL_LeaderVertexData
DL_LeaderVertexData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_LeaderVertexData {$/;"	s
DL_LineData	dxflib/dl_entities.h	/^    DL_LineData(double lx1, double ly1, double lz1,$/;"	f	struct:DL_LineData
DL_LineData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_LineData {$/;"	s
DL_LinetypeData	dxflib/dl_entities.h	/^    DL_LinetypeData($/;"	f	struct:DL_LinetypeData
DL_LinetypeData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_LinetypeData {$/;"	s
DL_MTextData	dxflib/dl_entities.h	/^    DL_MTextData(double ipx, double ipy, double ipz,$/;"	f	struct:DL_MTextData
DL_MTextData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_MTextData {$/;"	s
DL_NAME2_CODE	dxflib/dl_codes.h	455;"	d
DL_NAME_CODE	dxflib/dl_codes.h	469;"	d
DL_NANDOUBLE	dxflib/dl_dxf.h	53;"	d
DL_NullStrExc	dxflib/dl_exception.h	/^class DXFLIB_EXPORT DL_NullStrExc : public DL_Exception {}$/;"	c
DL_OBJECT_USED	dxflib/dl_codes.h	516;"	d
DL_OPEN_PLINE	dxflib/dl_codes.h	502;"	d
DL_PCS_TRANS_CODE	dxflib/dl_codes.h	543;"	d
DL_PFACE_MESH	dxflib/dl_codes.h	505;"	d
DL_PGON_MESH	dxflib/dl_codes.h	506;"	d
DL_PLINE_FLAGS_CODE	dxflib/dl_codes.h	431;"	d
DL_POINT_COORD_CODE	dxflib/dl_codes.h	420;"	d
DL_POLYLINE3D	dxflib/dl_codes.h	504;"	d
DL_PointData	dxflib/dl_entities.h	/^    DL_PointData(double px=0.0, double py=0.0, double pz=0.0) {$/;"	f	struct:DL_PointData
DL_PointData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_PointData {$/;"	s
DL_PolylineData	dxflib/dl_entities.h	/^    DL_PolylineData(int pNumber, int pMVerteces, int pNVerteces, int pFlags, double pElevation = 0.0) {$/;"	f	struct:DL_PolylineData
DL_PolylineData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_PolylineData {$/;"	s
DL_RADIUS_CODE	dxflib/dl_codes.h	459;"	d
DL_REFERENCED	dxflib/dl_codes.h	449;"	d
DL_RLGRP_END	dxflib/dl_codes.h	394;"	d
DL_RLGRP_START	dxflib/dl_codes.h	393;"	d
DL_ROTATION_CODE	dxflib/dl_codes.h	485;"	d
DL_RayData	dxflib/dl_entities.h	/^    DL_RayData(double bx, double by, double bz,$/;"	f	struct:DL_RayData
DL_RayData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_RayData {$/;"	s
DL_SCALE_X_CODE	dxflib/dl_codes.h	481;"	d
DL_SCALE_Y_CODE	dxflib/dl_codes.h	482;"	d
DL_SCALE_Z_CODE	dxflib/dl_codes.h	483;"	d
DL_SECTION_NAME_CODE	dxflib/dl_codes.h	471;"	d
DL_SES_CODE	dxflib/dl_codes.h	465;"	d
DL_SETTING	dxflib/dl_dxf.h	73;"	d
DL_SHOGRP_END	dxflib/dl_codes.h	398;"	d
DL_SHOGRP_START	dxflib/dl_codes.h	397;"	d
DL_SOT_CODE	dxflib/dl_codes.h	467;"	d
DL_STRGRP_END	dxflib/dl_codes.h	386;"	d
DL_STRGRP_START	dxflib/dl_codes.h	385;"	d
DL_STYLE	dxflib/dl_dxf.h	72;"	d
DL_SUBCLASS	dxflib/dl_codes.h	401;"	d
DL_SolidData	dxflib/dl_entities.h	/^typedef DL_TraceData DL_SolidData;$/;"	t
DL_SplineData	dxflib/dl_entities.h	/^    DL_SplineData(int degree,$/;"	f	struct:DL_SplineData
DL_SplineData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_SplineData {$/;"	s
DL_StyleData	dxflib/dl_entities.h	/^    DL_StyleData($/;"	f	struct:DL_StyleData
DL_StyleData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_StyleData {$/;"	s
DL_TEXTVAL_CODE	dxflib/dl_codes.h	468;"	d
DL_THICKNESS	dxflib/dl_codes.h	426;"	d
DL_TXTHI_CODE	dxflib/dl_codes.h	480;"	d
DL_TXT_STYLE_CODE	dxflib/dl_codes.h	473;"	d
DL_TextData	dxflib/dl_entities.h	/^    DL_TextData(double ipx, double ipy, double ipz,$/;"	f	struct:DL_TextData
DL_TextData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_TextData {$/;"	s
DL_TraceData	dxflib/dl_entities.h	/^    DL_TraceData() {$/;"	f	struct:DL_TraceData
DL_TraceData	dxflib/dl_entities.h	/^    DL_TraceData(double sx1, double sy1, double sz1,$/;"	f	struct:DL_TraceData
DL_TraceData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_TraceData {$/;"	s
DL_UCS_TRANS_CODE	dxflib/dl_codes.h	541;"	d
DL_UNKNOWN	dxflib/dl_dxf.h	67;"	d
DL_VERSION	dxflib/dl_dxf.h	60;"	d
DL_VERSION_2000	dxflib/dl_codes.h	378;"	d
DL_VERSION_2002	dxflib/dl_codes.h	379;"	d
DL_VERSION_BUILD	dxflib/dl_dxf.h	65;"	d
DL_VERSION_LT2	dxflib/dl_codes.h	372;"	d
DL_VERSION_LT95	dxflib/dl_codes.h	374;"	d
DL_VERSION_LT97	dxflib/dl_codes.h	376;"	d
DL_VERSION_LT98	dxflib/dl_codes.h	377;"	d
DL_VERSION_MAJOR	dxflib/dl_dxf.h	62;"	d
DL_VERSION_MINOR	dxflib/dl_dxf.h	63;"	d
DL_VERSION_R12	dxflib/dl_codes.h	371;"	d
DL_VERSION_R13	dxflib/dl_codes.h	373;"	d
DL_VERSION_R14	dxflib/dl_codes.h	375;"	d
DL_VERSION_REV	dxflib/dl_dxf.h	64;"	d
DL_VERTEX_COORD_CODE	dxflib/dl_codes.h	509;"	d
DL_VERTS_FOLLOW_CODE	dxflib/dl_codes.h	508;"	d
DL_VertexData	dxflib/dl_entities.h	/^    DL_VertexData(double px=0.0, double py=0.0, double pz=0.0,$/;"	f	struct:DL_VertexData
DL_VertexData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_VertexData {$/;"	s
DL_WCS_TRANS_CODE	dxflib/dl_codes.h	540;"	d
DL_WRITER_ASCII_H	dxflib/dl_writer_ascii.h	27;"	d
DL_WRITER_H	dxflib/dl_writer.h	27;"	d
DL_Writer	dxflib/dl_writer.h	/^    DL_Writer(DL_Codes::version version) : m_handle(0x30) {$/;"	f	class:DL_Writer
DL_Writer	dxflib/dl_writer.h	/^class DXFLIB_EXPORT DL_Writer {$/;"	c
DL_WriterA	dxflib/dl_writer_ascii.h	/^    DL_WriterA(const char* fname, DL_Codes::version version=DL_VERSION_2000)$/;"	f	class:DL_WriterA
DL_WriterA	dxflib/dl_writer_ascii.h	/^class DXFLIB_EXPORT DL_WriterA : public DL_Writer {$/;"	c
DL_XLineData	dxflib/dl_entities.h	/^    DL_XLineData(double bx, double by, double bz,$/;"	f	struct:DL_XLineData
DL_XLineData	dxflib/dl_entities.h	/^struct DXFLIB_EXPORT DL_XLineData {$/;"	s
DL_XRECORD	dxflib/dl_dxf.h	101;"	d
DL_XREF_DEPENDENT	dxflib/dl_codes.h	447;"	d
DL_XREF_RESOLVED	dxflib/dl_codes.h	448;"	d
DL_XSCALE_CODE	dxflib/dl_codes.h	451;"	d
DL_X_EXTRU_CODE	dxflib/dl_codes.h	435;"	d
DL_Y8_COORD_CODE	dxflib/dl_codes.h	416;"	d
DL_YSCALE_CODE	dxflib/dl_codes.h	452;"	d
DL_Y_EXTRU_CODE	dxflib/dl_codes.h	436;"	d
DL_Z0_COORD_CODE	dxflib/dl_codes.h	417;"	d
DL_Z8_COORD_CODE	dxflib/dl_codes.h	418;"	d
DL_Z_EXTRU_CODE	dxflib/dl_codes.h	437;"	d
DXFLIB_EXPORT	dxflib/dl_global.h	12;"	d
DXFLIB_EXPORT	dxflib/dl_global.h	4;"	d
DXFLIB_EXPORT	dxflib/dl_global.h	6;"	d
DXFLIB_EXPORT	dxflib/dl_global.h	9;"	d
DXF_CODES_H	dxflib/dl_codes.h	31;"	d
EXECUTABLE	makefile	/^EXECUTABLE=dxf_obj$/;"	m
LDFLAGS	makefile	/^	LDFLAGS=--shell-file shell_minimal.html --preload-file models -lglut -stdlib=libc++ -O2 $/;"	m
LDFLAGS	makefile	/^	LDFLAGS=-g #-lglut -lGLESv2 -lm -g # -O0$/;"	m
LDFLAGS	makefile	/^	LDFLAGS=-g -stdlib=libc++ #-lglut -lGLESv2 -lm -stdlib=libc++ -g # -fsanitize=address -fsanitize-memory-track-origins$/;"	m
M_PI	dxflib/dl_codes.h	49;"	d
M_PI	dxflib/dl_codes.h	50;"	d
M_PI	dxflib/dl_codes.h	55;"	d
M_PI	dxflib/dl_dxf.h	43;"	d
M_PI	dxflib/dl_dxf.h	44;"	d
M_PI	dxflib/dl_dxf.h	49;"	d
OBJECTS	makefile	/^OBJECTS=$(SOURCES:.cpp=.o)$/;"	m
ObjCreationAdapter	ObjCreationAdapter.cpp	/^ObjCreationAdapter::ObjCreationAdapter() {}$/;"	f	class:ObjCreationAdapter
ObjCreationAdapter	ObjCreationAdapter.h	/^class ObjCreationAdapter : public DL_CreationAdapter {$/;"	c
SOURCES	makefile	/^SOURCES=main.cpp ObjCreationAdapter.cpp dxflib\/dl_dxf.cpp dxflib\/dl_writer_ascii.cpp$/;"	m
TEST_CREATIONCLASS_H	ObjCreationAdapter.h	26;"	d
add3dFace	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::add3dFace(const DL_3dFaceData& data) {$/;"	f	class:ObjCreationAdapter
add3dFace	dxflib/dl_creationadapter.h	/^    virtual void add3dFace(const DL_3dFaceData&) {}$/;"	f	class:DL_CreationAdapter
add3dFace	dxflib/dl_dxf.cpp	/^void DL_Dxf::add3dFace(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addArc	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::addArc(const DL_ArcData& data) {$/;"	f	class:ObjCreationAdapter
addArc	dxflib/dl_creationadapter.h	/^    virtual void addArc(const DL_ArcData&) {}$/;"	f	class:DL_CreationAdapter
addArc	dxflib/dl_dxf.cpp	/^void DL_Dxf::addArc(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addArcAlignedText	dxflib/dl_creationadapter.h	/^    virtual void addArcAlignedText(const DL_ArcAlignedTextData&) {}$/;"	f	class:DL_CreationAdapter
addArcAlignedText	dxflib/dl_dxf.cpp	/^void DL_Dxf::addArcAlignedText(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addAttribute	dxflib/dl_creationadapter.h	/^    virtual void addAttribute(const DL_AttributeData&) {}$/;"	f	class:DL_CreationAdapter
addAttribute	dxflib/dl_dxf.cpp	/^void DL_Dxf::addAttribute(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addBlock	dxflib/dl_creationadapter.h	/^    virtual void addBlock(const DL_BlockData&) {}$/;"	f	class:DL_CreationAdapter
addBlock	dxflib/dl_dxf.cpp	/^void DL_Dxf::addBlock(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addCircle	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::addCircle(const DL_CircleData& data) {$/;"	f	class:ObjCreationAdapter
addCircle	dxflib/dl_creationadapter.h	/^    virtual void addCircle(const DL_CircleData&) {}$/;"	f	class:DL_CreationAdapter
addCircle	dxflib/dl_dxf.cpp	/^void DL_Dxf::addCircle(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addComment	dxflib/dl_creationadapter.h	/^    virtual void addComment(const char*) {}$/;"	f	class:DL_CreationAdapter
addComment	dxflib/dl_creationadapter.h	/^    virtual void addComment(const std::string&) {}$/;"	f	class:DL_CreationAdapter
addComment	dxflib/dl_dxf.cpp	/^void DL_Dxf::addComment(DL_CreationInterface* creationInterface, const std::string& comment) {$/;"	f	class:DL_Dxf
addControlPoint	dxflib/dl_creationadapter.h	/^    virtual void addControlPoint(const DL_ControlPointData&) {}$/;"	f	class:DL_CreationAdapter
addDictionary	dxflib/dl_creationadapter.h	/^    virtual void addDictionary(const DL_DictionaryData&) {}$/;"	f	class:DL_CreationAdapter
addDictionary	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDictionary(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDictionaryEntry	dxflib/dl_creationadapter.h	/^    virtual void addDictionaryEntry(const DL_DictionaryEntryData&) {}$/;"	f	class:DL_CreationAdapter
addDictionaryEntry	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDictionaryEntry(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDimAlign	dxflib/dl_creationadapter.h	/^    virtual void addDimAlign(const DL_DimensionData&,$/;"	f	class:DL_CreationAdapter
addDimAligned	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDimAligned(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDimAngular	dxflib/dl_creationadapter.h	/^    virtual void addDimAngular(const DL_DimensionData&,$/;"	f	class:DL_CreationAdapter
addDimAngular	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDimAngular(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDimAngular3P	dxflib/dl_creationadapter.h	/^    virtual void addDimAngular3P(const DL_DimensionData&,$/;"	f	class:DL_CreationAdapter
addDimAngular3P	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDimAngular3P(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDimDiametric	dxflib/dl_creationadapter.h	/^    virtual void addDimDiametric(const DL_DimensionData&,$/;"	f	class:DL_CreationAdapter
addDimDiametric	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDimDiametric(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDimLinear	dxflib/dl_creationadapter.h	/^    virtual void addDimLinear(const DL_DimensionData&,$/;"	f	class:DL_CreationAdapter
addDimLinear	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDimLinear(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDimOrdinate	dxflib/dl_creationadapter.h	/^    virtual void addDimOrdinate(const DL_DimensionData&,$/;"	f	class:DL_CreationAdapter
addDimOrdinate	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDimOrdinate(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addDimRadial	dxflib/dl_creationadapter.h	/^    virtual void addDimRadial(const DL_DimensionData&,$/;"	f	class:DL_CreationAdapter
addDimRadial	dxflib/dl_dxf.cpp	/^void DL_Dxf::addDimRadial(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addEllipse	dxflib/dl_creationadapter.h	/^    virtual void addEllipse(const DL_EllipseData&) {}$/;"	f	class:DL_CreationAdapter
addEllipse	dxflib/dl_dxf.cpp	/^void DL_Dxf::addEllipse(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addFitPoint	dxflib/dl_creationadapter.h	/^    virtual void addFitPoint(const DL_FitPointData&) {}$/;"	f	class:DL_CreationAdapter
addHatch	dxflib/dl_creationadapter.h	/^    virtual void addHatch(const DL_HatchData&) {}$/;"	f	class:DL_CreationAdapter
addHatch	dxflib/dl_dxf.cpp	/^void DL_Dxf::addHatch(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addHatchEdge	dxflib/dl_creationadapter.h	/^    virtual void addHatchEdge(const DL_HatchEdgeData&) {}$/;"	f	class:DL_CreationAdapter
addHatchEdge	dxflib/dl_dxf.cpp	/^void DL_Dxf::addHatchEdge() {$/;"	f	class:DL_Dxf
addHatchLoop	dxflib/dl_creationadapter.h	/^    virtual void addHatchLoop(const DL_HatchLoopData&) {}$/;"	f	class:DL_CreationAdapter
addHatchLoop	dxflib/dl_dxf.cpp	/^void DL_Dxf::addHatchLoop() {$/;"	f	class:DL_Dxf
addImage	dxflib/dl_creationadapter.h	/^    virtual void addImage(const DL_ImageData&) {}$/;"	f	class:DL_CreationAdapter
addImage	dxflib/dl_dxf.cpp	/^void DL_Dxf::addImage(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addImageDef	dxflib/dl_dxf.cpp	/^void DL_Dxf::addImageDef(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addInsert	dxflib/dl_creationadapter.h	/^    virtual void addInsert(const DL_InsertData&) {}$/;"	f	class:DL_CreationAdapter
addInsert	dxflib/dl_dxf.cpp	/^void DL_Dxf::addInsert(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addKnot	dxflib/dl_creationadapter.h	/^    virtual void addKnot(const DL_KnotData&) {}$/;"	f	class:DL_CreationAdapter
addLayer	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::addLayer(const DL_LayerData& data) {$/;"	f	class:ObjCreationAdapter
addLayer	dxflib/dl_creationadapter.h	/^    virtual void addLayer(const DL_LayerData&) {}$/;"	f	class:DL_CreationAdapter
addLayer	dxflib/dl_dxf.cpp	/^void DL_Dxf::addLayer(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addLeader	dxflib/dl_creationadapter.h	/^    virtual void addLeader(const DL_LeaderData&) {}$/;"	f	class:DL_CreationAdapter
addLeader	dxflib/dl_dxf.cpp	/^void DL_Dxf::addLeader(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addLeaderVertex	dxflib/dl_creationadapter.h	/^    virtual void addLeaderVertex(const DL_LeaderVertexData&) {}$/;"	f	class:DL_CreationAdapter
addLine	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::addLine(const DL_LineData& data) {$/;"	f	class:ObjCreationAdapter
addLine	dxflib/dl_creationadapter.h	/^    virtual void addLine(const DL_LineData&) {}$/;"	f	class:DL_CreationAdapter
addLine	dxflib/dl_dxf.cpp	/^void DL_Dxf::addLine(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addLinetype	dxflib/dl_creationadapter.h	/^    virtual void addLinetype(const DL_LinetypeData&) {}$/;"	f	class:DL_CreationAdapter
addLinetype	dxflib/dl_dxf.cpp	/^void DL_Dxf::addLinetype(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addLinetypeDash	dxflib/dl_creationadapter.h	/^    virtual void addLinetypeDash(double) {}$/;"	f	class:DL_CreationAdapter
addMText	dxflib/dl_creationadapter.h	/^    virtual void addMText(const DL_MTextData&) {}$/;"	f	class:DL_CreationAdapter
addMText	dxflib/dl_dxf.cpp	/^void DL_Dxf::addMText(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addMTextChunk	dxflib/dl_creationadapter.h	/^    virtual void addMTextChunk(const char*) {}$/;"	f	class:DL_CreationAdapter
addMTextChunk	dxflib/dl_creationadapter.h	/^    virtual void addMTextChunk(const std::string&) {}$/;"	f	class:DL_CreationAdapter
addPoint	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::addPoint(const DL_PointData& data) {$/;"	f	class:ObjCreationAdapter
addPoint	dxflib/dl_creationadapter.h	/^    virtual void addPoint(const DL_PointData&) {}$/;"	f	class:DL_CreationAdapter
addPoint	dxflib/dl_dxf.cpp	/^void DL_Dxf::addPoint(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addPolyline	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::addPolyline(const DL_PolylineData& data) {$/;"	f	class:ObjCreationAdapter
addPolyline	dxflib/dl_creationadapter.h	/^    virtual void addPolyline(const DL_PolylineData&) {}$/;"	f	class:DL_CreationAdapter
addPolyline	dxflib/dl_dxf.cpp	/^void DL_Dxf::addPolyline(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addRay	dxflib/dl_creationadapter.h	/^    virtual void addRay(const DL_RayData&) {}$/;"	f	class:DL_CreationAdapter
addRay	dxflib/dl_dxf.cpp	/^void DL_Dxf::addRay(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addSetting	dxflib/dl_dxf.cpp	/^void DL_Dxf::addSetting(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addSolid	dxflib/dl_creationadapter.h	/^    virtual void addSolid(const DL_SolidData&) {}$/;"	f	class:DL_CreationAdapter
addSolid	dxflib/dl_dxf.cpp	/^void DL_Dxf::addSolid(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addSpline	dxflib/dl_creationadapter.h	/^    virtual void addSpline(const DL_SplineData&) {}$/;"	f	class:DL_CreationAdapter
addSpline	dxflib/dl_dxf.cpp	/^void DL_Dxf::addSpline(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addText	dxflib/dl_creationadapter.h	/^    virtual void addText(const DL_TextData&) {}$/;"	f	class:DL_CreationAdapter
addText	dxflib/dl_dxf.cpp	/^void DL_Dxf::addText(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addTextStyle	dxflib/dl_creationadapter.h	/^    virtual void addTextStyle(const DL_StyleData&) {}$/;"	f	class:DL_CreationAdapter
addTextStyle	dxflib/dl_dxf.cpp	/^void DL_Dxf::addTextStyle(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addTrace	dxflib/dl_creationadapter.h	/^    virtual void addTrace(const DL_TraceData&) {}$/;"	f	class:DL_CreationAdapter
addTrace	dxflib/dl_dxf.cpp	/^void DL_Dxf::addTrace(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addVertex	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::addVertex(const DL_VertexData& data) {$/;"	f	class:ObjCreationAdapter
addVertex	dxflib/dl_creationadapter.h	/^    virtual void addVertex(const DL_VertexData&) {}$/;"	f	class:DL_CreationAdapter
addVertex	dxflib/dl_dxf.cpp	/^void DL_Dxf::addVertex(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addXDataApp	dxflib/dl_creationadapter.h	/^    virtual void addXDataApp(const std::string&) {}$/;"	f	class:DL_CreationAdapter
addXDataInt	dxflib/dl_creationadapter.h	/^    virtual void addXDataInt(int, int) {}$/;"	f	class:DL_CreationAdapter
addXDataReal	dxflib/dl_creationadapter.h	/^    virtual void addXDataReal(int, double) {}$/;"	f	class:DL_CreationAdapter
addXDataString	dxflib/dl_creationadapter.h	/^    virtual void addXDataString(int, const std::string&) {}$/;"	f	class:DL_CreationAdapter
addXLine	dxflib/dl_creationadapter.h	/^    virtual void addXLine(const DL_XLineData&) {}$/;"	f	class:DL_CreationAdapter
addXLine	dxflib/dl_dxf.cpp	/^void DL_Dxf::addXLine(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
addXRecord	dxflib/dl_creationadapter.h	/^    virtual void addXRecord(const std::string&) {}$/;"	f	class:DL_CreationAdapter
addXRecordBool	dxflib/dl_creationadapter.h	/^    virtual void addXRecordBool(int, bool) {}$/;"	f	class:DL_CreationAdapter
addXRecordInt	dxflib/dl_creationadapter.h	/^    virtual void addXRecordInt(int, int) {}$/;"	f	class:DL_CreationAdapter
addXRecordReal	dxflib/dl_creationadapter.h	/^    virtual void addXRecordReal(int, double) {}$/;"	f	class:DL_CreationAdapter
addXRecordString	dxflib/dl_creationadapter.h	/^    virtual void addXRecordString(int, const std::string&) {}$/;"	f	class:DL_CreationAdapter
alignment	dxflib/dl_entities.h	/^    int alignment;$/;"	m	struct:DL_ArcAlignedTextData
angle	dxflib/dl_entities.h	/^    double angle;$/;"	m	struct:DL_DimLinearData
angle	dxflib/dl_entities.h	/^    double angle;$/;"	m	struct:DL_DimensionData
angle	dxflib/dl_entities.h	/^    double angle;$/;"	m	struct:DL_HatchData
angle	dxflib/dl_entities.h	/^    double angle;$/;"	m	struct:DL_InsertData
angle	dxflib/dl_entities.h	/^    double angle;$/;"	m	struct:DL_MTextData
angle	dxflib/dl_entities.h	/^    double angle;$/;"	m	struct:DL_TextData
angle1	dxflib/dl_entities.h	/^    double angle1;$/;"	m	struct:DL_ArcData
angle1	dxflib/dl_entities.h	/^    double angle1;$/;"	m	struct:DL_EllipseData
angle1	dxflib/dl_entities.h	/^    double angle1;$/;"	m	struct:DL_HatchEdgeData
angle2	dxflib/dl_entities.h	/^    double angle2;$/;"	m	struct:DL_ArcData
angle2	dxflib/dl_entities.h	/^    double angle2;$/;"	m	struct:DL_EllipseData
angle2	dxflib/dl_entities.h	/^    double angle2;$/;"	m	struct:DL_HatchEdgeData
appDictionaryHandle	dxflib/dl_dxf.h	/^    unsigned long appDictionaryHandle;$/;"	m	class:DL_Dxf
apx	dxflib/dl_entities.h	/^    double apx;$/;"	m	struct:DL_TextData
apy	dxflib/dl_entities.h	/^    double apy;$/;"	m	struct:DL_TextData
apz	dxflib/dl_entities.h	/^    double apz;$/;"	m	struct:DL_TextData
arcHandle	dxflib/dl_entities.h	/^    int arcHandle;$/;"	m	struct:DL_ArcAlignedTextData
arrowHeadFlag	dxflib/dl_entities.h	/^    int arrowHeadFlag;$/;"	m	struct:DL_LeaderData
attachmentPoint	dxflib/dl_entities.h	/^    int attachmentPoint;$/;"	m	struct:DL_DimensionData
attachmentPoint	dxflib/dl_entities.h	/^    int attachmentPoint;$/;"	m	struct:DL_MTextData
attrib	dxflib/dl_dxf.h	/^    DL_Attributes attrib;$/;"	m	class:DL_Dxf
attributes	dxflib/dl_creationinterface.h	/^    DL_Attributes attributes;$/;"	m	class:DL_CreationInterface
bigFontFile	dxflib/dl_entities.h	/^    std::string bigFontFile;$/;"	m	struct:DL_StyleData
black	dxflib/dl_codes.h	/^        black = 250,$/;"	e	enum:DL_Codes::color
blue	dxflib/dl_codes.h	/^        blue = 5,$/;"	e	enum:DL_Codes::color
bold	dxflib/dl_entities.h	/^    bool bold;$/;"	m	struct:DL_ArcAlignedTextData
bold	dxflib/dl_entities.h	/^    bool bold;$/;"	m	struct:DL_StyleData
bpx	dxflib/dl_entities.h	/^    double bpx;$/;"	m	struct:DL_BlockData
bpy	dxflib/dl_entities.h	/^    double bpy;$/;"	m	struct:DL_BlockData
bpz	dxflib/dl_entities.h	/^    double bpz;$/;"	m	struct:DL_BlockData
brightness	dxflib/dl_entities.h	/^    int brightness;$/;"	m	struct:DL_ImageData
brown	dxflib/dl_codes.h	/^        brown = 15,$/;"	e	enum:DL_Codes::color
bulge	dxflib/dl_entities.h	/^    double bulge;$/;"	m	struct:DL_VertexData
bx	dxflib/dl_entities.h	/^    double bx;$/;"	m	struct:DL_RayData
bx	dxflib/dl_entities.h	/^    double bx;$/;"	m	struct:DL_XLineData
by	dxflib/dl_entities.h	/^    double by;$/;"	m	struct:DL_RayData
by	dxflib/dl_entities.h	/^    double by;$/;"	m	struct:DL_XLineData
byblock	dxflib/dl_codes.h	/^        byblock = 0$/;"	e	enum:DL_Codes::color
bylayer	dxflib/dl_codes.h	/^        bylayer = 256,$/;"	e	enum:DL_Codes::color
bz	dxflib/dl_entities.h	/^    double bz;$/;"	m	struct:DL_RayData
bz	dxflib/dl_entities.h	/^    double bz;$/;"	m	struct:DL_XLineData
ccw	dxflib/dl_entities.h	/^    bool ccw;$/;"	m	struct:DL_HatchEdgeData
characerSet	dxflib/dl_entities.h	/^    int characerSet;$/;"	m	struct:DL_ArcAlignedTextData
checkVariable	dxflib/dl_dxf.cpp	/^bool DL_Dxf::checkVariable(const char* var, DL_Codes::version version) {$/;"	f	class:DL_Dxf
close	dxflib/dl_writer_ascii.cpp	/^void DL_WriterA::close() const {$/;"	f	class:DL_WriterA
colSp	dxflib/dl_entities.h	/^    double colSp;$/;"	m	struct:DL_InsertData
color	dxflib/dl_attributes.h	/^    int color;$/;"	m	class:DL_Attributes
color	dxflib/dl_codes.h	/^    enum color {$/;"	g	class:DL_Codes
color	dxflib/dl_writer.h	/^    void color(int col=256) const {$/;"	f	class:DL_Writer
color24	dxflib/dl_attributes.h	/^    int color24;$/;"	m	class:DL_Attributes
cols	dxflib/dl_entities.h	/^    int cols;$/;"	m	struct:DL_InsertData
comment	dxflib/dl_writer.h	/^    void comment(const char* text) const {$/;"	f	class:DL_Writer
contrast	dxflib/dl_entities.h	/^    int contrast;$/;"	m	struct:DL_ImageData
controlPointIndex	dxflib/dl_dxf.h	/^    int controlPointIndex;$/;"	m	class:DL_Dxf
controlPoints	dxflib/dl_dxf.h	/^    double* controlPoints;$/;"	m	class:DL_Dxf
controlPoints	dxflib/dl_entities.h	/^    std::vector<std::vector<double> > controlPoints;$/;"	m	struct:DL_HatchEdgeData
coord	dxflib/dl_writer.h	/^    void coord(int gc, double x, double y, double z=0) const {$/;"	f	class:DL_Writer
coordTriplet	dxflib/dl_writer.h	/^    void coordTriplet(int gc, const double* value) const {$/;"	f	class:DL_Writer
currentObjectType	dxflib/dl_dxf.h	/^    int currentObjectType;$/;"	m	class:DL_Dxf
cx	dxflib/dl_entities.h	/^    double cx;$/;"	m	struct:DL_ArcAlignedTextData
cx	dxflib/dl_entities.h	/^    double cx;$/;"	m	struct:DL_ArcData
cx	dxflib/dl_entities.h	/^    double cx;$/;"	m	struct:DL_CircleData
cx	dxflib/dl_entities.h	/^    double cx;$/;"	m	struct:DL_EllipseData
cx	dxflib/dl_entities.h	/^    double cx;$/;"	m	struct:DL_HatchEdgeData
cy	dxflib/dl_entities.h	/^    double cy;$/;"	m	struct:DL_ArcAlignedTextData
cy	dxflib/dl_entities.h	/^    double cy;$/;"	m	struct:DL_ArcData
cy	dxflib/dl_entities.h	/^    double cy;$/;"	m	struct:DL_CircleData
cy	dxflib/dl_entities.h	/^    double cy;$/;"	m	struct:DL_EllipseData
cy	dxflib/dl_entities.h	/^    double cy;$/;"	m	struct:DL_HatchEdgeData
cyan	dxflib/dl_codes.h	/^        cyan = 4,$/;"	e	enum:DL_Codes::color
cz	dxflib/dl_entities.h	/^    double cz;$/;"	m	struct:DL_ArcAlignedTextData
cz	dxflib/dl_entities.h	/^    double cz;$/;"	m	struct:DL_ArcData
cz	dxflib/dl_entities.h	/^    double cz;$/;"	m	struct:DL_CircleData
cz	dxflib/dl_entities.h	/^    double cz;$/;"	m	struct:DL_EllipseData
defined	dxflib/dl_entities.h	/^    bool defined;$/;"	m	struct:DL_HatchEdgeData
degree	dxflib/dl_entities.h	/^    unsigned int degree;$/;"	m	struct:DL_HatchEdgeData
degree	dxflib/dl_entities.h	/^    unsigned int degree;$/;"	m	struct:DL_SplineData
description	dxflib/dl_entities.h	/^    std::string description;$/;"	m	struct:DL_LinetypeData
dimScale	dxflib/dl_entities.h	/^    double dimScale;$/;"	m	struct:DL_DimensionData
direction	dxflib/dl_entities.h	/^    int direction;$/;"	m	struct:DL_ArcAlignedTextData
direction	dxflib/dl_extrusion.h	/^    double *direction;$/;"	m	class:DL_Extrusion
dirx	dxflib/dl_entities.h	/^    double dirx;$/;"	m	struct:DL_MTextData
diry	dxflib/dl_entities.h	/^    double diry;$/;"	m	struct:DL_MTextData
dirz	dxflib/dl_entities.h	/^    double dirz;$/;"	m	struct:DL_MTextData
dpx	dxflib/dl_entities.h	/^    double dpx;$/;"	m	struct:DL_DimDiametricData
dpx	dxflib/dl_entities.h	/^    double dpx;$/;"	m	struct:DL_DimRadialData
dpx	dxflib/dl_entities.h	/^    double dpx;$/;"	m	struct:DL_DimensionData
dpx1	dxflib/dl_entities.h	/^    double dpx1;$/;"	m	struct:DL_DimAngular3PData
dpx1	dxflib/dl_entities.h	/^    double dpx1;$/;"	m	struct:DL_DimAngularData
dpx1	dxflib/dl_entities.h	/^    double dpx1;$/;"	m	struct:DL_DimLinearData
dpx1	dxflib/dl_entities.h	/^    double dpx1;$/;"	m	struct:DL_DimOrdinateData
dpx2	dxflib/dl_entities.h	/^    double dpx2;$/;"	m	struct:DL_DimAngular3PData
dpx2	dxflib/dl_entities.h	/^    double dpx2;$/;"	m	struct:DL_DimAngularData
dpx2	dxflib/dl_entities.h	/^    double dpx2;$/;"	m	struct:DL_DimLinearData
dpx2	dxflib/dl_entities.h	/^    double dpx2;$/;"	m	struct:DL_DimOrdinateData
dpx3	dxflib/dl_entities.h	/^    double dpx3;$/;"	m	struct:DL_DimAngular3PData
dpx3	dxflib/dl_entities.h	/^    double dpx3;$/;"	m	struct:DL_DimAngularData
dpx4	dxflib/dl_entities.h	/^    double dpx4;$/;"	m	struct:DL_DimAngularData
dpy	dxflib/dl_entities.h	/^    double dpy;$/;"	m	struct:DL_DimDiametricData
dpy	dxflib/dl_entities.h	/^    double dpy;$/;"	m	struct:DL_DimRadialData
dpy	dxflib/dl_entities.h	/^    double dpy;$/;"	m	struct:DL_DimensionData
dpy1	dxflib/dl_entities.h	/^    double dpy1;$/;"	m	struct:DL_DimAngular3PData
dpy1	dxflib/dl_entities.h	/^    double dpy1;$/;"	m	struct:DL_DimAngularData
dpy1	dxflib/dl_entities.h	/^    double dpy1;$/;"	m	struct:DL_DimLinearData
dpy1	dxflib/dl_entities.h	/^    double dpy1;$/;"	m	struct:DL_DimOrdinateData
dpy2	dxflib/dl_entities.h	/^    double dpy2;$/;"	m	struct:DL_DimAngular3PData
dpy2	dxflib/dl_entities.h	/^    double dpy2;$/;"	m	struct:DL_DimAngularData
dpy2	dxflib/dl_entities.h	/^    double dpy2;$/;"	m	struct:DL_DimLinearData
dpy2	dxflib/dl_entities.h	/^    double dpy2;$/;"	m	struct:DL_DimOrdinateData
dpy3	dxflib/dl_entities.h	/^    double dpy3;$/;"	m	struct:DL_DimAngular3PData
dpy3	dxflib/dl_entities.h	/^    double dpy3;$/;"	m	struct:DL_DimAngularData
dpy4	dxflib/dl_entities.h	/^    double dpy4;$/;"	m	struct:DL_DimAngularData
dpz	dxflib/dl_entities.h	/^    double dpz;$/;"	m	struct:DL_DimDiametricData
dpz	dxflib/dl_entities.h	/^    double dpz;$/;"	m	struct:DL_DimRadialData
dpz	dxflib/dl_entities.h	/^    double dpz;$/;"	m	struct:DL_DimensionData
dpz1	dxflib/dl_entities.h	/^    double dpz1;$/;"	m	struct:DL_DimAngular3PData
dpz1	dxflib/dl_entities.h	/^    double dpz1;$/;"	m	struct:DL_DimAngularData
dpz1	dxflib/dl_entities.h	/^    double dpz1;$/;"	m	struct:DL_DimLinearData
dpz1	dxflib/dl_entities.h	/^    double dpz1;$/;"	m	struct:DL_DimOrdinateData
dpz2	dxflib/dl_entities.h	/^    double dpz2;$/;"	m	struct:DL_DimAngular3PData
dpz2	dxflib/dl_entities.h	/^    double dpz2;$/;"	m	struct:DL_DimAngularData
dpz2	dxflib/dl_entities.h	/^    double dpz2;$/;"	m	struct:DL_DimLinearData
dpz2	dxflib/dl_entities.h	/^    double dpz2;$/;"	m	struct:DL_DimOrdinateData
dpz3	dxflib/dl_entities.h	/^    double dpz3;$/;"	m	struct:DL_DimAngular3PData
dpz3	dxflib/dl_entities.h	/^    double dpz3;$/;"	m	struct:DL_DimAngularData
dpz4	dxflib/dl_entities.h	/^    double dpz4;$/;"	m	struct:DL_DimAngularData
drawingDirection	dxflib/dl_entities.h	/^    int drawingDirection;$/;"	m	struct:DL_MTextData
dx	dxflib/dl_entities.h	/^    double dx;$/;"	m	struct:DL_RayData
dx	dxflib/dl_entities.h	/^    double dx;$/;"	m	struct:DL_XLineData
dxfBool	dxflib/dl_writer.h	/^    virtual void dxfBool(int gc, bool value) const {$/;"	f	class:DL_Writer
dxfColors	dxflib/dl_codes.h	/^const double dxfColors[][3] = {$/;"	v
dxfEOF	dxflib/dl_writer.h	/^    void dxfEOF() const {$/;"	f	class:DL_Writer
dxfHex	dxflib/dl_writer_ascii.cpp	/^void DL_WriterA::dxfHex(int gc, int value) const {$/;"	f	class:DL_WriterA
dxfInt	dxflib/dl_writer_ascii.cpp	/^void DL_WriterA::dxfInt(int gc, int value) const {$/;"	f	class:DL_WriterA
dxfReal	dxflib/dl_writer_ascii.cpp	/^void DL_WriterA::dxfReal(int gc, double value) const {$/;"	f	class:DL_WriterA
dxfString	dxflib/dl_writer_ascii.cpp	/^void DL_WriterA::dxfString(int gc, const char* value) const {$/;"	f	class:DL_WriterA
dxfString	dxflib/dl_writer_ascii.cpp	/^void DL_WriterA::dxfString(int gc, const std::string& value) const {$/;"	f	class:DL_WriterA
dy	dxflib/dl_entities.h	/^    double dy;$/;"	m	struct:DL_RayData
dy	dxflib/dl_entities.h	/^    double dy;$/;"	m	struct:DL_XLineData
dz	dxflib/dl_entities.h	/^    double dz;$/;"	m	struct:DL_RayData
dz	dxflib/dl_entities.h	/^    double dz;$/;"	m	struct:DL_XLineData
elevation	dxflib/dl_entities.h	/^    double elevation;$/;"	m	struct:DL_PolylineData
elevation	dxflib/dl_extrusion.h	/^    double elevation;$/;"	m	class:DL_Extrusion
endAngle	dxflib/dl_entities.h	/^    double endAngle;$/;"	m	struct:DL_ArcAlignedTextData
endBlock	dxflib/dl_creationadapter.h	/^    virtual void endBlock() {}$/;"	f	class:DL_CreationAdapter
endBlock	dxflib/dl_dxf.cpp	/^void DL_Dxf::endBlock(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
endEntity	dxflib/dl_creationadapter.h	/^    virtual void endEntity() {}$/;"	f	class:DL_CreationAdapter
endEntity	dxflib/dl_dxf.cpp	/^void DL_Dxf::endEntity(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
endSection	dxflib/dl_creationadapter.h	/^    virtual void endSection() {}$/;"	f	class:DL_CreationAdapter
endSequence	dxflib/dl_creationadapter.h	/^    virtual void endSequence() {}$/;"	f	class:DL_CreationAdapter
endSequence	dxflib/dl_dxf.cpp	/^void DL_Dxf::endSequence(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
endTangentX	dxflib/dl_entities.h	/^    double endTangentX;$/;"	m	struct:DL_HatchEdgeData
endTangentY	dxflib/dl_entities.h	/^    double endTangentY;$/;"	m	struct:DL_HatchEdgeData
entity	dxflib/dl_writer.h	/^    void entity(const char* entTypeName) const {$/;"	f	class:DL_Writer
entityAttributes	dxflib/dl_writer.h	/^    void entityAttributes(const DL_Attributes& attrib) const {$/;"	f	class:DL_Writer
epx1	dxflib/dl_entities.h	/^    double epx1;$/;"	m	struct:DL_DimAlignedData
epx2	dxflib/dl_entities.h	/^    double epx2;$/;"	m	struct:DL_DimAlignedData
epy1	dxflib/dl_entities.h	/^    double epy1;$/;"	m	struct:DL_DimAlignedData
epy2	dxflib/dl_entities.h	/^    double epy2;$/;"	m	struct:DL_DimAlignedData
epz1	dxflib/dl_entities.h	/^    double epz1;$/;"	m	struct:DL_DimAlignedData
epz2	dxflib/dl_entities.h	/^    double epz2;$/;"	m	struct:DL_DimAlignedData
extrusion	dxflib/dl_creationinterface.h	/^    DL_Extrusion *extrusion;$/;"	m	class:DL_CreationInterface
fade	dxflib/dl_entities.h	/^    int fade;$/;"	m	struct:DL_ImageData
file	dxflib/dl_entities.h	/^    std::string file;$/;"	m	struct:DL_ImageDefData
firstCall	dxflib/dl_dxf.h	/^    bool firstCall;$/;"	m	class:DL_Dxf
firstHatchLoop	dxflib/dl_dxf.h	/^    bool firstHatchLoop;$/;"	m	class:DL_Dxf
fitPointIndex	dxflib/dl_dxf.h	/^    int fitPointIndex;$/;"	m	class:DL_Dxf
fitPoints	dxflib/dl_dxf.h	/^    double* fitPoints;$/;"	m	class:DL_Dxf
fitPoints	dxflib/dl_entities.h	/^    std::vector<std::vector<double> > fitPoints;$/;"	m	struct:DL_HatchEdgeData
fixedTextHeight	dxflib/dl_entities.h	/^    double fixedTextHeight;$/;"	m	struct:DL_StyleData
flags	dxflib/dl_entities.h	/^    int flags;$/;"	m	struct:DL_BlockData
flags	dxflib/dl_entities.h	/^    int flags;$/;"	m	struct:DL_LayerData
flags	dxflib/dl_entities.h	/^    int flags;$/;"	m	struct:DL_LinetypeData
flags	dxflib/dl_entities.h	/^    int flags;$/;"	m	struct:DL_PolylineData
flags	dxflib/dl_entities.h	/^    int flags;$/;"	m	struct:DL_SplineData
flags	dxflib/dl_entities.h	/^    int flags;$/;"	m	struct:DL_StyleData
font	dxflib/dl_entities.h	/^    std::string font;$/;"	m	struct:DL_ArcAlignedTextData
getAttributes	dxflib/dl_creationinterface.h	/^    DL_Attributes getAttributes() {$/;"	f	class:DL_CreationInterface
getColor	dxflib/dl_attributes.h	/^    int getColor() const {$/;"	f	class:DL_Attributes
getColor24	dxflib/dl_attributes.h	/^    int getColor24() const {$/;"	f	class:DL_Attributes
getDimData	dxflib/dl_dxf.cpp	/^DL_DimensionData DL_Dxf::getDimData() {$/;"	f	class:DL_Dxf
getDirection	dxflib/dl_extrusion.h	/^    double* getDirection() const {$/;"	f	class:DL_Extrusion
getDirection	dxflib/dl_extrusion.h	/^    void getDirection(double dir[]) const {$/;"	f	class:DL_Extrusion
getElevation	dxflib/dl_extrusion.h	/^    double getElevation() const {$/;"	f	class:DL_Extrusion
getExtrusion	dxflib/dl_creationinterface.h	/^    DL_Extrusion* getExtrusion() {$/;"	f	class:DL_CreationInterface
getHandle	dxflib/dl_attributes.h	/^    int getHandle() const {$/;"	f	class:DL_Attributes
getInt16Value	dxflib/dl_dxf.h	/^    int getInt16Value(int code, int def) {$/;"	f	class:DL_Dxf
getIntValue	dxflib/dl_dxf.h	/^    int getIntValue(int code, int def) {$/;"	f	class:DL_Dxf
getLayer	dxflib/dl_attributes.h	/^    std::string getLayer() const {$/;"	f	class:DL_Attributes
getLibVersion	dxflib/dl_dxf.cpp	/^int DL_Dxf::getLibVersion(const std::string& str) {$/;"	f	class:DL_Dxf
getLinetype	dxflib/dl_attributes.h	/^    std::string getLinetype() const {$/;"	f	class:DL_Attributes
getLinetypeScale	dxflib/dl_attributes.h	/^    double getLinetypeScale() const {$/;"	f	class:DL_Attributes
getModelSpaceHandle	dxflib/dl_writer.h	/^    unsigned long getModelSpaceHandle() {$/;"	f	class:DL_Writer
getNextHandle	dxflib/dl_writer.h	/^    unsigned long getNextHandle() const {$/;"	f	class:DL_Writer
getPaperSpace0Handle	dxflib/dl_writer.h	/^    unsigned long getPaperSpace0Handle() {$/;"	f	class:DL_Writer
getPaperSpaceHandle	dxflib/dl_writer.h	/^    unsigned long getPaperSpaceHandle() {$/;"	f	class:DL_Writer
getRealValue	dxflib/dl_dxf.h	/^    double getRealValue(int code, double def) {$/;"	f	class:DL_Dxf
getStringValue	dxflib/dl_dxf.h	/^    std::string getStringValue(int code, const std::string& def) {$/;"	f	class:DL_Dxf
getStrippedLine	dxflib/dl_dxf.cpp	/^bool DL_Dxf::getStrippedLine(std::string &s, unsigned int size,$/;"	f	class:DL_Dxf
getStrippedLine	dxflib/dl_dxf.cpp	/^bool DL_Dxf::getStrippedLine(std::string& s, unsigned int size, FILE *fp, bool stripSpace) {$/;"	f	class:DL_Dxf
getVersion	dxflib/dl_dxf.h	/^    DL_Codes::version getVersion() {$/;"	f	class:DL_Dxf
getWidth	dxflib/dl_attributes.h	/^    int getWidth() const {$/;"	f	class:DL_Attributes
gray	dxflib/dl_codes.h	/^        gray = 8,$/;"	e	enum:DL_Codes::color
green	dxflib/dl_codes.h	/^        green = 3,$/;"	e	enum:DL_Codes::color
groupCode	dxflib/dl_dxf.h	/^    unsigned int groupCode;$/;"	m	class:DL_Dxf
groupCode	dxflib/dl_exception.h	/^    int groupCode;$/;"	m	class:DL_GroupCodeExc
groupCodeTmp	dxflib/dl_dxf.h	/^    std::string groupCodeTmp;$/;"	m	class:DL_Dxf
groupValue	dxflib/dl_dxf.h	/^    std::string groupValue;$/;"	m	class:DL_Dxf
hJustification	dxflib/dl_entities.h	/^    int hJustification;$/;"	m	struct:DL_TextData
handle	dxflib/dl_attributes.h	/^    int handle;$/;"	m	class:DL_Attributes
handle	dxflib/dl_entities.h	/^    std::string handle;$/;"	m	struct:DL_DictionaryData
handle	dxflib/dl_entities.h	/^    std::string handle;$/;"	m	struct:DL_DictionaryEntryData
handle	dxflib/dl_writer.h	/^    unsigned long handle(int gc=5) const {$/;"	f	class:DL_Writer
handleDictionaryData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleDictionaryData(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
handleHatchData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleHatchData(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
handleLWPolylineData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleLWPolylineData(DL_CreationInterface* \/*creationInterface*\/) {$/;"	f	class:DL_Dxf
handleLeaderData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleLeaderData(DL_CreationInterface* \/*creationInterface*\/) {$/;"	f	class:DL_Dxf
handleLinetypeData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleLinetypeData(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
handleMTextData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleMTextData(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
handleSplineData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleSplineData(DL_CreationInterface* \/*creationInterface*\/) {$/;"	f	class:DL_Dxf
handleXData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleXData(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
handleXRecordData	dxflib/dl_dxf.cpp	/^bool DL_Dxf::handleXRecordData(DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
hasValue	dxflib/dl_dxf.h	/^    bool hasValue(int code) {$/;"	f	class:DL_Dxf
hatchEdge	dxflib/dl_dxf.h	/^    DL_HatchEdgeData hatchEdge;$/;"	m	class:DL_Dxf
hatchEdges	dxflib/dl_dxf.h	/^    std::vector<std::vector<DL_HatchEdgeData> > hatchEdges;$/;"	m	class:DL_Dxf
height	dxflib/dl_entities.h	/^    double height;$/;"	m	struct:DL_ArcAlignedTextData
height	dxflib/dl_entities.h	/^    double height;$/;"	m	struct:DL_MTextData
height	dxflib/dl_entities.h	/^    double height;$/;"	m	struct:DL_TextData
height	dxflib/dl_entities.h	/^    int height;$/;"	m	struct:DL_ImageData
hooklineDirectionFlag	dxflib/dl_entities.h	/^    int hooklineDirectionFlag;$/;"	m	struct:DL_LeaderData
hooklineFlag	dxflib/dl_entities.h	/^    int hooklineFlag;$/;"	m	struct:DL_LeaderData
in	dxflib/dl_dxf.cpp	/^bool DL_Dxf::in(const std::string& file, DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
in	dxflib/dl_dxf.cpp	/^bool DL_Dxf::in(std::stringstream& stream,$/;"	f	class:DL_Dxf
inPaperSpace	dxflib/dl_attributes.h	/^    bool inPaperSpace;$/;"	m	class:DL_Attributes
incHandle	dxflib/dl_writer.h	/^    unsigned long incHandle() const {$/;"	f	class:DL_Writer
ipx	dxflib/dl_entities.h	/^    double ipx;$/;"	m	struct:DL_ImageData
ipx	dxflib/dl_entities.h	/^    double ipx;$/;"	m	struct:DL_InsertData
ipx	dxflib/dl_entities.h	/^    double ipx;$/;"	m	struct:DL_MTextData
ipx	dxflib/dl_entities.h	/^    double ipx;$/;"	m	struct:DL_TextData
ipy	dxflib/dl_entities.h	/^    double ipy;$/;"	m	struct:DL_ImageData
ipy	dxflib/dl_entities.h	/^    double ipy;$/;"	m	struct:DL_InsertData
ipy	dxflib/dl_entities.h	/^    double ipy;$/;"	m	struct:DL_MTextData
ipy	dxflib/dl_entities.h	/^    double ipy;$/;"	m	struct:DL_TextData
ipz	dxflib/dl_entities.h	/^    double ipz;$/;"	m	struct:DL_ImageData
ipz	dxflib/dl_entities.h	/^    double ipz;$/;"	m	struct:DL_InsertData
ipz	dxflib/dl_entities.h	/^    double ipz;$/;"	m	struct:DL_MTextData
ipz	dxflib/dl_entities.h	/^    double ipz;$/;"	m	struct:DL_TextData
isInPaperSpace	dxflib/dl_attributes.h	/^    bool isInPaperSpace() const {$/;"	f	class:DL_Attributes
italic	dxflib/dl_entities.h	/^    bool italic;$/;"	m	struct:DL_ArcAlignedTextData
italic	dxflib/dl_entities.h	/^    bool italic;$/;"	m	struct:DL_StyleData
k	dxflib/dl_entities.h	/^    double k;$/;"	m	struct:DL_KnotData
knotIndex	dxflib/dl_dxf.h	/^    int knotIndex;$/;"	m	class:DL_Dxf
knots	dxflib/dl_dxf.h	/^    double* knots;$/;"	m	class:DL_Dxf
knots	dxflib/dl_entities.h	/^    std::vector<double> knots;$/;"	m	struct:DL_HatchEdgeData
l_blue	dxflib/dl_codes.h	/^        l_blue = 163,$/;"	e	enum:DL_Codes::color
l_cyan	dxflib/dl_codes.h	/^        l_cyan = 131,$/;"	e	enum:DL_Codes::color
l_gray	dxflib/dl_codes.h	/^        l_gray = 252,$/;"	e	enum:DL_Codes::color
l_green	dxflib/dl_codes.h	/^        l_green = 121,$/;"	e	enum:DL_Codes::color
l_magenta	dxflib/dl_codes.h	/^        l_magenta = 221,$/;"	e	enum:DL_Codes::color
l_red	dxflib/dl_codes.h	/^        l_red = 23,$/;"	e	enum:DL_Codes::color
lastHeightUsed	dxflib/dl_entities.h	/^    double lastHeightUsed;$/;"	m	struct:DL_StyleData
layer	dxflib/dl_attributes.h	/^    std::string layer;$/;"	m	class:DL_Attributes
layerVertices	ObjCreationAdapter.h	/^	std::map<std::string, std::vector<Vertex>> layerVertices;$/;"	m	class:ObjCreationAdapter
leader	dxflib/dl_entities.h	/^    double leader;$/;"	m	struct:DL_DimDiametricData
leader	dxflib/dl_entities.h	/^    double leader;$/;"	m	struct:DL_DimRadialData
leaderCreationFlag	dxflib/dl_entities.h	/^    int leaderCreationFlag;$/;"	m	struct:DL_LeaderData
leaderPathType	dxflib/dl_entities.h	/^    int leaderPathType;$/;"	m	struct:DL_LeaderData
leaderVertexIndex	dxflib/dl_dxf.h	/^    int leaderVertexIndex;$/;"	m	class:DL_Dxf
leaderVertices	dxflib/dl_dxf.h	/^    double* leaderVertices;$/;"	m	class:DL_Dxf
leftOffset	dxflib/dl_entities.h	/^    double leftOffset;$/;"	m	struct:DL_ArcAlignedTextData
libVersion	dxflib/dl_dxf.h	/^    int libVersion;$/;"	m	class:DL_Dxf
lineSpacingFactor	dxflib/dl_entities.h	/^    double lineSpacingFactor;$/;"	m	struct:DL_DimensionData
lineSpacingFactor	dxflib/dl_entities.h	/^    double lineSpacingFactor;$/;"	m	struct:DL_MTextData
lineSpacingStyle	dxflib/dl_entities.h	/^    int lineSpacingStyle;$/;"	m	struct:DL_DimensionData
lineSpacingStyle	dxflib/dl_entities.h	/^    int lineSpacingStyle;$/;"	m	struct:DL_MTextData
lineWeight	dxflib/dl_writer.h	/^    void lineWeight(int lw) const {$/;"	f	class:DL_Writer
linearFactor	dxflib/dl_entities.h	/^    double linearFactor;$/;"	m	struct:DL_DimensionData
linetype	dxflib/dl_attributes.h	/^    std::string linetype;$/;"	m	class:DL_Attributes
linetype	dxflib/dl_writer.h	/^    void linetype(const char *lt) const {$/;"	f	class:DL_Writer
linetypeScale	dxflib/dl_attributes.h	/^    double linetypeScale;$/;"	m	class:DL_Attributes
linetypeScale	dxflib/dl_writer.h	/^    void linetypeScale(double scale) const {$/;"	f	class:DL_Writer
linkImage	dxflib/dl_creationadapter.h	/^    virtual void linkImage(const DL_ImageDefData&) {}$/;"	f	class:DL_CreationAdapter
m	dxflib/dl_entities.h	/^    unsigned int m;$/;"	m	struct:DL_PolylineData
m_handle	dxflib/dl_writer.h	/^    mutable unsigned long m_handle;$/;"	m	class:DL_Writer
m_ofile	dxflib/dl_writer_ascii.h	/^    mutable std::ofstream m_ofile;$/;"	m	class:DL_WriterA
magenta	dxflib/dl_codes.h	/^        magenta = 6,$/;"	e	enum:DL_Codes::color
main	main.cpp	/^int main(int argc, char** argv) {$/;"	f
maxControlPoints	dxflib/dl_dxf.h	/^    int maxControlPoints;$/;"	m	class:DL_Dxf
maxFitPoints	dxflib/dl_dxf.h	/^    int maxFitPoints;$/;"	m	class:DL_Dxf
maxKnots	dxflib/dl_dxf.h	/^    int maxKnots;$/;"	m	class:DL_Dxf
maxLeaderVertices	dxflib/dl_dxf.h	/^    int maxLeaderVertices;$/;"	m	class:DL_Dxf
maxVertices	dxflib/dl_dxf.h	/^    int maxVertices;$/;"	m	class:DL_Dxf
modelSpaceHandle	dxflib/dl_writer.h	/^    mutable unsigned long modelSpaceHandle;$/;"	m	class:DL_Writer
mpx	dxflib/dl_entities.h	/^    double mpx;$/;"	m	struct:DL_DimensionData
mpy	dxflib/dl_entities.h	/^    double mpy;$/;"	m	struct:DL_DimensionData
mpz	dxflib/dl_entities.h	/^    double mpz;$/;"	m	struct:DL_DimensionData
mx	dxflib/dl_entities.h	/^    double mx;$/;"	m	struct:DL_EllipseData
mx	dxflib/dl_entities.h	/^    double mx;$/;"	m	struct:DL_HatchEdgeData
my	dxflib/dl_entities.h	/^    double my;$/;"	m	struct:DL_EllipseData
my	dxflib/dl_entities.h	/^    double my;$/;"	m	struct:DL_HatchEdgeData
mz	dxflib/dl_entities.h	/^    double mz;$/;"	m	struct:DL_EllipseData
n	dxflib/dl_entities.h	/^    unsigned int n;$/;"	m	struct:DL_PolylineData
nControl	dxflib/dl_entities.h	/^    unsigned int nControl;$/;"	m	struct:DL_HatchEdgeData
nControl	dxflib/dl_entities.h	/^    unsigned int nControl;$/;"	m	struct:DL_SplineData
nFit	dxflib/dl_entities.h	/^    unsigned int nFit;$/;"	m	struct:DL_HatchEdgeData
nFit	dxflib/dl_entities.h	/^    unsigned int nFit;$/;"	m	struct:DL_SplineData
nKnots	dxflib/dl_entities.h	/^    unsigned int nKnots;$/;"	m	struct:DL_HatchEdgeData
nKnots	dxflib/dl_entities.h	/^    unsigned int nKnots;$/;"	m	struct:DL_SplineData
name	dxflib/dl_entities.h	/^    std::string name;$/;"	m	struct:DL_BlockData
name	dxflib/dl_entities.h	/^    std::string name;$/;"	m	struct:DL_DictionaryEntryData
name	dxflib/dl_entities.h	/^    std::string name;$/;"	m	struct:DL_InsertData
name	dxflib/dl_entities.h	/^    std::string name;$/;"	m	struct:DL_LayerData
name	dxflib/dl_entities.h	/^    std::string name;$/;"	m	struct:DL_LinetypeData
name	dxflib/dl_entities.h	/^    std::string name;$/;"	m	struct:DL_StyleData
numEdges	dxflib/dl_entities.h	/^    int numEdges;$/;"	m	struct:DL_HatchLoopData
numLoops	dxflib/dl_entities.h	/^    int numLoops;$/;"	m	struct:DL_HatchData
number	dxflib/dl_entities.h	/^    int number;$/;"	m	struct:DL_LeaderData
number	dxflib/dl_entities.h	/^    unsigned int number;$/;"	m	struct:DL_PolylineData
numberOfDashes	dxflib/dl_entities.h	/^    int numberOfDashes;$/;"	m	struct:DL_LinetypeData
oblique	dxflib/dl_entities.h	/^    double oblique;$/;"	m	struct:DL_DimLinearData
obliqueAngle	dxflib/dl_entities.h	/^    double obliqueAngle;$/;"	m	struct:DL_StyleData
off	dxflib/dl_entities.h	/^    bool off;$/;"	m	struct:DL_LayerData
offset	dxflib/dl_entities.h	/^    double offset;$/;"	m	struct:DL_ArcAlignedTextData
openFailed	dxflib/dl_writer_ascii.cpp	/^bool DL_WriterA::openFailed() const {$/;"	f	class:DL_WriterA
operator =	dxflib/dl_extrusion.h	/^    DL_Extrusion operator = (const DL_Extrusion& extru) {$/;"	f	class:DL_Extrusion
operator ==	dxflib/dl_entities.h	/^    bool operator==(const DL_StyleData& other) {$/;"	f	struct:DL_StyleData
originX	dxflib/dl_entities.h	/^    double originX;$/;"	m	struct:DL_HatchData
originY	dxflib/dl_entities.h	/^    double originY;$/;"	m	struct:DL_HatchData
out	dxflib/dl_dxf.cpp	/^DL_WriterA* DL_Dxf::out(const char* file, DL_Codes::version version) {$/;"	f	class:DL_Dxf
paperSpace0Handle	dxflib/dl_writer.h	/^    mutable unsigned long paperSpace0Handle;$/;"	m	class:DL_Writer
paperSpaceHandle	dxflib/dl_writer.h	/^    mutable unsigned long paperSpaceHandle;$/;"	m	class:DL_Writer
pattern	dxflib/dl_entities.h	/^    double* pattern;$/;"	m	struct:DL_LinetypeData
pattern	dxflib/dl_entities.h	/^    std::string pattern;$/;"	m	struct:DL_HatchData
patternLength	dxflib/dl_entities.h	/^    double patternLength;$/;"	m	struct:DL_LinetypeData
periodic	dxflib/dl_entities.h	/^    bool periodic;$/;"	m	struct:DL_HatchEdgeData
pitch	dxflib/dl_entities.h	/^    int pitch;$/;"	m	struct:DL_ArcAlignedTextData
polylineLayer	dxflib/dl_dxf.h	/^    std::string polylineLayer;$/;"	m	class:DL_Dxf
primaryFontFile	dxflib/dl_entities.h	/^    std::string primaryFontFile;$/;"	m	struct:DL_StyleData
printAttributes	ObjCreationAdapter.cpp	/^void ObjCreationAdapter::printAttributes() {$/;"	f	class:ObjCreationAdapter
processCodeValuePair	dxflib/dl_creationadapter.h	/^    virtual void processCodeValuePair(unsigned int, char*) {}$/;"	f	class:DL_CreationAdapter
processCodeValuePair	dxflib/dl_creationadapter.h	/^    virtual void processCodeValuePair(unsigned int, const std::string&) {}$/;"	f	class:DL_CreationAdapter
processDXFGroup	dxflib/dl_dxf.cpp	/^bool DL_Dxf::processDXFGroup(DL_CreationInterface* creationInterface,$/;"	f	class:DL_Dxf
radius	dxflib/dl_entities.h	/^    double radius;$/;"	m	struct:DL_ArcAlignedTextData
radius	dxflib/dl_entities.h	/^    double radius;$/;"	m	struct:DL_ArcData
radius	dxflib/dl_entities.h	/^    double radius;$/;"	m	struct:DL_CircleData
radius	dxflib/dl_entities.h	/^    double radius;$/;"	m	struct:DL_HatchEdgeData
ratio	dxflib/dl_entities.h	/^    double ratio;$/;"	m	struct:DL_EllipseData
ratio	dxflib/dl_entities.h	/^    double ratio;$/;"	m	struct:DL_HatchEdgeData
rational	dxflib/dl_entities.h	/^    bool rational;$/;"	m	struct:DL_HatchEdgeData
readDxfGroups	dxflib/dl_dxf.cpp	/^bool DL_Dxf::readDxfGroups(FILE *fp, DL_CreationInterface* creationInterface) {$/;"	f	class:DL_Dxf
readDxfGroups	dxflib/dl_dxf.cpp	/^bool DL_Dxf::readDxfGroups(std::stringstream& stream,$/;"	f	class:DL_Dxf
red	dxflib/dl_codes.h	/^        red = 1,$/;"	e	enum:DL_Codes::color
ref	dxflib/dl_entities.h	/^    std::string ref;$/;"	m	struct:DL_ImageData
ref	dxflib/dl_entities.h	/^    std::string ref;$/;"	m	struct:DL_ImageDefData
resetHandle	dxflib/dl_writer.h	/^    void resetHandle() const {$/;"	f	class:DL_Writer
reversedCharacterOrder	dxflib/dl_entities.h	/^    bool reversedCharacterOrder;$/;"	m	struct:DL_ArcAlignedTextData
rightOffset	dxflib/dl_entities.h	/^    double rightOffset;$/;"	m	struct:DL_ArcAlignedTextData
rowSp	dxflib/dl_entities.h	/^    double rowSp;$/;"	m	struct:DL_InsertData
rows	dxflib/dl_entities.h	/^    int rows;$/;"	m	struct:DL_InsertData
scale	dxflib/dl_entities.h	/^    double scale;$/;"	m	struct:DL_HatchData
section	dxflib/dl_writer.h	/^    void section(const char* name) const {$/;"	f	class:DL_Writer
sectionBlockEntry	dxflib/dl_writer.h	/^    void sectionBlockEntry(unsigned long int h=0)  const {$/;"	f	class:DL_Writer
sectionBlockEntryEnd	dxflib/dl_writer.h	/^    void sectionBlockEntryEnd(unsigned long int h=0)  const {$/;"	f	class:DL_Writer
sectionBlocks	dxflib/dl_writer.h	/^    void sectionBlocks() const {$/;"	f	class:DL_Writer
sectionClasses	dxflib/dl_writer.h	/^    void sectionClasses() const {$/;"	f	class:DL_Writer
sectionEnd	dxflib/dl_writer.h	/^    void sectionEnd() const {$/;"	f	class:DL_Writer
sectionEntities	dxflib/dl_writer.h	/^    void sectionEntities() const {$/;"	f	class:DL_Writer
sectionHeader	dxflib/dl_writer.h	/^    void sectionHeader() const {$/;"	f	class:DL_Writer
sectionObjects	dxflib/dl_writer.h	/^    void sectionObjects() const {$/;"	f	class:DL_Writer
sectionTables	dxflib/dl_writer.h	/^    void sectionTables() const {$/;"	f	class:DL_Writer
setAttributes	dxflib/dl_creationinterface.h	/^    void setAttributes(const DL_Attributes& attrib) {$/;"	f	class:DL_CreationInterface
setColor	dxflib/dl_attributes.h	/^    void setColor(int color) {$/;"	f	class:DL_Attributes
setColor24	dxflib/dl_attributes.h	/^    void setColor24(int color) {$/;"	f	class:DL_Attributes
setDirection	dxflib/dl_extrusion.h	/^    void setDirection(double dx, double dy, double dz) {$/;"	f	class:DL_Extrusion
setElevation	dxflib/dl_extrusion.h	/^    void setElevation(double elevation) {$/;"	f	class:DL_Extrusion
setExtrusion	dxflib/dl_creationinterface.h	/^    void setExtrusion(double dx, double dy, double dz, double elevation) {$/;"	f	class:DL_CreationInterface
setHandle	dxflib/dl_attributes.h	/^    void setHandle(int h) {$/;"	f	class:DL_Attributes
setInPaperSpace	dxflib/dl_attributes.h	/^    void setInPaperSpace(bool on) {$/;"	f	class:DL_Attributes
setLayer	dxflib/dl_attributes.h	/^    void setLayer(const std::string& layer) {$/;"	f	class:DL_Attributes
setLinetype	dxflib/dl_attributes.h	/^    void setLinetype(const std::string& linetype) {$/;"	f	class:DL_Attributes
setLinetypeScale	dxflib/dl_attributes.h	/^    void setLinetypeScale(double linetypeScale) {$/;"	f	class:DL_Attributes
setModelSpaceHandle	dxflib/dl_writer.h	/^    void setModelSpaceHandle(unsigned long h) {$/;"	f	class:DL_Writer
setPaperSpace0Handle	dxflib/dl_writer.h	/^    void setPaperSpace0Handle(unsigned long h) {$/;"	f	class:DL_Writer
setPaperSpaceHandle	dxflib/dl_writer.h	/^    void setPaperSpaceHandle(unsigned long h) {$/;"	f	class:DL_Writer
setVariableDouble	dxflib/dl_creationadapter.h	/^    virtual void setVariableDouble(const char*, double, int) {}$/;"	f	class:DL_CreationAdapter
setVariableDouble	dxflib/dl_creationadapter.h	/^    virtual void setVariableDouble(const std::string&, double, int) {}$/;"	f	class:DL_CreationAdapter
setVariableInt	dxflib/dl_creationadapter.h	/^    virtual void setVariableInt(const char*, int, int) {}$/;"	f	class:DL_CreationAdapter
setVariableInt	dxflib/dl_creationadapter.h	/^    virtual void setVariableInt(const std::string&, int, int) {}$/;"	f	class:DL_CreationAdapter
setVariableString	dxflib/dl_creationadapter.h	/^    virtual void setVariableString(const char*, const char*, int) {}$/;"	f	class:DL_CreationAdapter
setVariableString	dxflib/dl_creationadapter.h	/^    virtual void setVariableString(const std::string&, const std::string&, int) {}$/;"	f	class:DL_CreationAdapter
setVariableVector	dxflib/dl_creationadapter.h	/^    virtual void setVariableVector(const char*,  double, double, double, int) {}$/;"	f	class:DL_CreationAdapter
setVariableVector	dxflib/dl_creationadapter.h	/^    virtual void setVariableVector(const std::string&,  double, double, double, int) {}$/;"	f	class:DL_CreationAdapter
setWidth	dxflib/dl_attributes.h	/^    void setWidth(int width) {$/;"	f	class:DL_Attributes
settingKey	dxflib/dl_dxf.h	/^    std::string settingKey;$/;"	m	class:DL_Dxf
settingValue	dxflib/dl_dxf.h	/^    char settingValue[DL_DXF_MAXLINE+1];$/;"	m	class:DL_Dxf
shxFont	dxflib/dl_entities.h	/^    bool shxFont;$/;"	m	struct:DL_ArcAlignedTextData
side	dxflib/dl_entities.h	/^    int side;$/;"	m	struct:DL_ArcAlignedTextData
solid	dxflib/dl_entities.h	/^    bool solid;$/;"	m	struct:DL_HatchData
spacing	dxflib/dl_entities.h	/^    double spacing;$/;"	m	struct:DL_ArcAlignedTextData
startAngle	dxflib/dl_entities.h	/^    double startAngle;$/;"	m	struct:DL_ArcAlignedTextData
startTangentX	dxflib/dl_entities.h	/^    double startTangentX;$/;"	m	struct:DL_HatchEdgeData
startTangentY	dxflib/dl_entities.h	/^    double startTangentY;$/;"	m	struct:DL_HatchEdgeData
strReplace	dxflib/dl_writer_ascii.cpp	/^void DL_WriterA::strReplace(char* str, char src, char dest) {$/;"	f	class:DL_WriterA
strcasecmp	dxflib/dl_codes.h	40;"	d
strcasecmp	dxflib/dl_codes.h	44;"	d
stripWhiteSpace	dxflib/dl_dxf.cpp	/^bool DL_Dxf::stripWhiteSpace(char** s, bool stripSpace) {$/;"	f	class:DL_Dxf
style	dxflib/dl_entities.h	/^    std::string style;$/;"	m	struct:DL_ArcAlignedTextData
style	dxflib/dl_entities.h	/^    std::string style;$/;"	m	struct:DL_DimensionData
style	dxflib/dl_entities.h	/^    std::string style;$/;"	m	struct:DL_MTextData
style	dxflib/dl_entities.h	/^    std::string style;$/;"	m	struct:DL_TextData
styleHandleStd	dxflib/dl_dxf.h	/^    unsigned long styleHandleStd;$/;"	m	class:DL_Dxf
subClass	dxflib/dl_writer.h	/^    void subClass(const char* sub) const {$/;"	f	class:DL_Writer
sx	dxflib/dl_entities.h	/^    double sx;$/;"	m	struct:DL_InsertData
sy	dxflib/dl_entities.h	/^    double sy;$/;"	m	struct:DL_InsertData
sz	dxflib/dl_entities.h	/^    double sz;$/;"	m	struct:DL_InsertData
table	dxflib/dl_writer.h	/^    void table(const char* name, int num, int h=0) const {$/;"	f	class:DL_Writer
tableAppid	dxflib/dl_writer.h	/^    void tableAppid(int num) const {$/;"	f	class:DL_Writer
tableAppidEntry	dxflib/dl_writer.h	/^    void tableAppidEntry(unsigned long int h=0)  const {$/;"	f	class:DL_Writer
tableEnd	dxflib/dl_writer.h	/^    void tableEnd() const {$/;"	f	class:DL_Writer
tableLayerEntry	dxflib/dl_writer.h	/^    void tableLayerEntry(unsigned long int h=0)  const {$/;"	f	class:DL_Writer
tableLayers	dxflib/dl_writer.h	/^    void tableLayers(int num) const {$/;"	f	class:DL_Writer
tableLinetypeEntry	dxflib/dl_writer.h	/^    void tableLinetypeEntry(unsigned long int h=0)  const {$/;"	f	class:DL_Writer
tableLinetypes	dxflib/dl_writer.h	/^    void tableLinetypes(int num) const {$/;"	f	class:DL_Writer
tableStyle	dxflib/dl_writer.h	/^    void tableStyle(int num) const {$/;"	f	class:DL_Writer
tag	dxflib/dl_entities.h	/^    std::string tag;$/;"	m	struct:DL_AttributeData
tangentEndX	dxflib/dl_entities.h	/^    double tangentEndX;$/;"	m	struct:DL_SplineData
tangentEndY	dxflib/dl_entities.h	/^    double tangentEndY;$/;"	m	struct:DL_SplineData
tangentEndZ	dxflib/dl_entities.h	/^    double tangentEndZ;$/;"	m	struct:DL_SplineData
tangentStartX	dxflib/dl_entities.h	/^    double tangentStartX;$/;"	m	struct:DL_SplineData
tangentStartY	dxflib/dl_entities.h	/^    double tangentStartY;$/;"	m	struct:DL_SplineData
tangentStartZ	dxflib/dl_entities.h	/^    double tangentStartZ;$/;"	m	struct:DL_SplineData
test	dxflib/dl_dxf.cpp	/^void DL_Dxf::test() {$/;"	f	class:DL_Dxf
testReading	main.cpp	/^void testReading(char* file) {$/;"	f
testWriting	main.cpp	/^void testWriting() {$/;"	f
text	dxflib/dl_entities.h	/^    std::string text;$/;"	m	struct:DL_ArcAlignedTextData
text	dxflib/dl_entities.h	/^    std::string text;$/;"	m	struct:DL_DimensionData
text	dxflib/dl_entities.h	/^    std::string text;$/;"	m	struct:DL_MTextData
text	dxflib/dl_entities.h	/^    std::string text;$/;"	m	struct:DL_TextData
textAnnotationHeight	dxflib/dl_entities.h	/^    double textAnnotationHeight;$/;"	m	struct:DL_LeaderData
textAnnotationWidth	dxflib/dl_entities.h	/^    double textAnnotationWidth;$/;"	m	struct:DL_LeaderData
textGenerationFlags	dxflib/dl_entities.h	/^    int textGenerationFlags;$/;"	m	struct:DL_StyleData
textGenerationFlags	dxflib/dl_entities.h	/^    int textGenerationFlags;$/;"	m	struct:DL_TextData
thickness	dxflib/dl_entities.h	/^    double thickness;$/;"	m	struct:DL_TraceData
toBool	dxflib/dl_dxf.h	/^    bool toBool(const std::string& str) {$/;"	f	class:DL_Dxf
toInt	dxflib/dl_dxf.h	/^    int toInt(const std::string& str) {$/;"	f	class:DL_Dxf
toInt16	dxflib/dl_dxf.h	/^    int toInt16(const std::string& str) {$/;"	f	class:DL_Dxf
toReal	dxflib/dl_dxf.h	/^    double toReal(const std::string& str) {$/;"	f	class:DL_Dxf
type	dxflib/dl_entities.h	/^    int type;$/;"	m	struct:DL_DimensionData
type	dxflib/dl_entities.h	/^    int type;$/;"	m	struct:DL_HatchEdgeData
underline	dxflib/dl_entities.h	/^    bool underline;$/;"	m	struct:DL_ArcAlignedTextData
usage	main.cpp	/^void usage() {$/;"	f
ux	dxflib/dl_entities.h	/^    double ux;$/;"	m	struct:DL_ImageData
uy	dxflib/dl_entities.h	/^    double uy;$/;"	m	struct:DL_ImageData
uz	dxflib/dl_entities.h	/^    double uz;$/;"	m	struct:DL_ImageData
vJustification	dxflib/dl_entities.h	/^    int vJustification;$/;"	m	struct:DL_TextData
values	dxflib/dl_dxf.h	/^    std::map<int, std::string> values;$/;"	m	class:DL_Dxf
version	dxflib/dl_codes.h	/^    enum version {$/;"	g	class:DL_Codes
version	dxflib/dl_dxf.h	/^    DL_Codes::version version;$/;"	m	class:DL_Dxf
version	dxflib/dl_writer.h	/^    DL_Codes::version version;$/;"	m	class:DL_Writer
vertexIndex	dxflib/dl_dxf.h	/^    int vertexIndex;$/;"	m	class:DL_Dxf
vertices	dxflib/dl_dxf.h	/^    double* vertices;$/;"	m	class:DL_Dxf
vertices	dxflib/dl_entities.h	/^    std::vector<std::vector<double> > vertices;$/;"	m	struct:DL_HatchEdgeData
vx	dxflib/dl_entities.h	/^    double vx;$/;"	m	struct:DL_ImageData
vy	dxflib/dl_entities.h	/^    double vy;$/;"	m	struct:DL_ImageData
vz	dxflib/dl_entities.h	/^    double vz;$/;"	m	struct:DL_ImageData
w	dxflib/dl_entities.h	/^    double w;$/;"	m	struct:DL_ControlPointData
weightIndex	dxflib/dl_dxf.h	/^    int weightIndex;$/;"	m	class:DL_Dxf
weights	dxflib/dl_dxf.h	/^    double* weights;$/;"	m	class:DL_Dxf
weights	dxflib/dl_entities.h	/^    std::vector<double> weights;$/;"	m	struct:DL_HatchEdgeData
white	dxflib/dl_codes.h	/^        white = 7,$/;"	e	enum:DL_Codes::color
width	dxflib/dl_attributes.h	/^    int width;$/;"	m	class:DL_Attributes
width	dxflib/dl_entities.h	/^    double width;$/;"	m	struct:DL_MTextData
width	dxflib/dl_entities.h	/^    int width;$/;"	m	struct:DL_ImageData
widthFactor	dxflib/dl_entities.h	/^    double widthFactor;$/;"	m	struct:DL_StyleData
wizard	dxflib/dl_entities.h	/^    bool wizard;$/;"	m	struct:DL_ArcAlignedTextData
write3dFace	dxflib/dl_dxf.cpp	/^void DL_Dxf::write3dFace(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeAppDictionary	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeAppDictionary(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writeAppid	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeAppid(DL_WriterA& dw, const std::string& name) {$/;"	f	class:DL_Dxf
writeArc	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeArc(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeAttribute	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeAttribute(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeBlock	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeBlock(DL_WriterA& dw, const DL_BlockData& data) {$/;"	f	class:DL_Dxf
writeBlockRecord	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeBlockRecord(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writeBlockRecord	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeBlockRecord(DL_WriterA& dw, const std::string& name) {$/;"	f	class:DL_Dxf
writeCircle	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeCircle(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeComment	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeComment(DL_WriterA& dw, const std::string& comment) {$/;"	f	class:DL_Dxf
writeControlPoint	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeControlPoint(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDictionaryEntry	dxflib/dl_dxf.cpp	/^int DL_Dxf::writeDictionaryEntry(DL_WriterA& dw, const std::string& name) {$/;"	f	class:DL_Dxf
writeDimAligned	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimAligned(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimAngular	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimAngular(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimAngular3P	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimAngular3P(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimDiametric	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimDiametric(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimLinear	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimLinear(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimOrdinate	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimOrdinate(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimRadial	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimRadial(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimStyle	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimStyle(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeDimStyleOverrides	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeDimStyleOverrides(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeEllipse	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeEllipse(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeEndBlock	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeEndBlock(DL_WriterA& dw, const std::string& name) {$/;"	f	class:DL_Dxf
writeFitPoint	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeFitPoint(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeHatch1	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeHatch1(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeHatch2	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeHatch2(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeHatchEdge	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeHatchEdge(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeHatchLoop1	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeHatchLoop1(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeHatchLoop2	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeHatchLoop2(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeHeader	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeHeader(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writeImage	dxflib/dl_dxf.cpp	/^int DL_Dxf::writeImage(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeImageDef	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeImageDef(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeInsert	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeInsert(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeKnot	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeKnot(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeLayer	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeLayer(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeLeader	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeLeader(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeLeaderVertex	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeLeaderVertex(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeLine	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeLine(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeLinetype	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeLinetype(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeMText	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeMText(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeObjects	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeObjects(DL_WriterA& dw, const std::string& appDictionaryName) {$/;"	f	class:DL_Dxf
writeObjectsEnd	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeObjectsEnd(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writePoint	dxflib/dl_dxf.cpp	/^void DL_Dxf::writePoint(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writePolyline	dxflib/dl_dxf.cpp	/^void DL_Dxf::writePolyline(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writePolylineEnd	dxflib/dl_dxf.cpp	/^void DL_Dxf::writePolylineEnd(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writeRay	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeRay(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeSolid	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeSolid(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeSpline	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeSpline(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeStyle	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeStyle(DL_WriterA& dw, const DL_StyleData& style) {$/;"	f	class:DL_Dxf
writeText	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeText(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeTrace	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeTrace(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeUcs	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeUcs(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writeVPort	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeVPort(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writeVertex	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeVertex(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeView	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeView(DL_WriterA& dw) {$/;"	f	class:DL_Dxf
writeXLine	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeXLine(DL_WriterA& dw,$/;"	f	class:DL_Dxf
writeXRecord	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeXRecord(DL_WriterA& dw, int handle, bool value) {$/;"	f	class:DL_Dxf
writeXRecord	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeXRecord(DL_WriterA& dw, int handle, const std::string& value) {$/;"	f	class:DL_Dxf
writeXRecord	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeXRecord(DL_WriterA& dw, int handle, double value) {$/;"	f	class:DL_Dxf
writeXRecord	dxflib/dl_dxf.cpp	/^void DL_Dxf::writeXRecord(DL_WriterA& dw, int handle, int value) {$/;"	f	class:DL_Dxf
x	dxflib/dl_entities.h	/^    double x;$/;"	m	struct:DL_ControlPointData
x	dxflib/dl_entities.h	/^    double x;$/;"	m	struct:DL_FitPointData
x	dxflib/dl_entities.h	/^    double x;$/;"	m	struct:DL_LeaderVertexData
x	dxflib/dl_entities.h	/^    double x;$/;"	m	struct:DL_PointData
x	dxflib/dl_entities.h	/^    double x;$/;"	m	struct:DL_VertexData
x	dxflib/dl_entities.h	/^    double x[4];$/;"	m	struct:DL_TraceData
x1	dxflib/dl_entities.h	/^    double x1;$/;"	m	struct:DL_HatchEdgeData
x1	dxflib/dl_entities.h	/^    double x1;$/;"	m	struct:DL_LineData
x2	dxflib/dl_entities.h	/^    double x2;$/;"	m	struct:DL_HatchEdgeData
x2	dxflib/dl_entities.h	/^    double x2;$/;"	m	struct:DL_LineData
xRecordHandle	dxflib/dl_dxf.h	/^    std::string xRecordHandle;$/;"	m	class:DL_Dxf
xRecordValues	dxflib/dl_dxf.h	/^    bool xRecordValues;$/;"	m	class:DL_Dxf
xScaleFactor	dxflib/dl_entities.h	/^    double xScaleFactor;$/;"	m	struct:DL_ArcAlignedTextData
xScaleFactor	dxflib/dl_entities.h	/^    double xScaleFactor;$/;"	m	struct:DL_TextData
xtype	dxflib/dl_entities.h	/^    bool xtype;$/;"	m	struct:DL_DimOrdinateData
y	dxflib/dl_entities.h	/^    double y;$/;"	m	struct:DL_ControlPointData
y	dxflib/dl_entities.h	/^    double y;$/;"	m	struct:DL_FitPointData
y	dxflib/dl_entities.h	/^    double y;$/;"	m	struct:DL_LeaderVertexData
y	dxflib/dl_entities.h	/^    double y;$/;"	m	struct:DL_PointData
y	dxflib/dl_entities.h	/^    double y;$/;"	m	struct:DL_VertexData
y	dxflib/dl_entities.h	/^    double y[4];$/;"	m	struct:DL_TraceData
y1	dxflib/dl_entities.h	/^    double y1;$/;"	m	struct:DL_HatchEdgeData
y1	dxflib/dl_entities.h	/^    double y1;$/;"	m	struct:DL_LineData
y2	dxflib/dl_entities.h	/^    double y2;$/;"	m	struct:DL_HatchEdgeData
y2	dxflib/dl_entities.h	/^    double y2;$/;"	m	struct:DL_LineData
yellow	dxflib/dl_codes.h	/^        yellow = 2,$/;"	e	enum:DL_Codes::color
z	dxflib/dl_entities.h	/^    double z;$/;"	m	struct:DL_ControlPointData
z	dxflib/dl_entities.h	/^    double z;$/;"	m	struct:DL_FitPointData
z	dxflib/dl_entities.h	/^    double z;$/;"	m	struct:DL_LeaderVertexData
z	dxflib/dl_entities.h	/^    double z;$/;"	m	struct:DL_PointData
z	dxflib/dl_entities.h	/^    double z;$/;"	m	struct:DL_VertexData
z	dxflib/dl_entities.h	/^    double z[4];$/;"	m	struct:DL_TraceData
z1	dxflib/dl_entities.h	/^    double z1;$/;"	m	struct:DL_LineData
z2	dxflib/dl_entities.h	/^    double z2;$/;"	m	struct:DL_LineData
~DL_CreationAdapter	dxflib/dl_creationadapter.h	/^    virtual ~DL_CreationAdapter() {}$/;"	f	class:DL_CreationAdapter
~DL_CreationInterface	dxflib/dl_creationinterface.h	/^    virtual ~DL_CreationInterface() {$/;"	f	class:DL_CreationInterface
~DL_Dxf	dxflib/dl_dxf.cpp	/^DL_Dxf::~DL_Dxf() {$/;"	f	class:DL_Dxf
~DL_Extrusion	dxflib/dl_extrusion.h	/^    ~DL_Extrusion() {$/;"	f	class:DL_Extrusion
~DL_Writer	dxflib/dl_writer.h	/^    virtual ~DL_Writer() {}$/;"	f	class:DL_Writer
~DL_WriterA	dxflib/dl_writer_ascii.h	/^    virtual ~DL_WriterA() {}$/;"	f	class:DL_WriterA
